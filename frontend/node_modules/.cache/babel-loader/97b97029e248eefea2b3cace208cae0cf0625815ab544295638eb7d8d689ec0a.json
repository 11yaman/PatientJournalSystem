{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessageDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport useAuth from '../../hooks/useAuth';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport { toast } from \"react-toastify\";\nimport useApi from \"../../hooks/useApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessageDetails = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    message,\n    loading\n  } = useMessageWithReplies(messageId);\n  const {\n    user\n  } = useAuth();\n  const {\n    post\n  } = useApi();\n  const [content, setContent] = useState('');\n  const [messageDetails, setMessageDetails] = useState();\n  useEffect(() => {\n    setMessageDetails(message);\n  }, [messageId, message, user]);\n  const handleReply = async () => {\n    if (!content) {\n      toast.error('Please fill in requierd field');\n      return;\n    }\n    try {\n      const result = await post(`/messages/${messageId}/reply`, {\n        content: content\n      }, user.token);\n      console.log(result);\n      if (result) {\n        toast.success('Note created successfully');\n        setContent(\"\");\n        navigate(`/messages/${messageId}`);\n      } else {\n        toast.error('Error creating note');\n      }\n    } catch (err) {\n      toast.error('Error creating note');\n    }\n  };\n  const renderMessage = message => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient: \", message.sender.firstName, \" \", message.sender.lastName, \" (\", message.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sent at: \", new Date(message.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), message.replies && message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageDetails && messageDetails.replies && renderMessage(messageDetails), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply\",\n          className: \"form-control\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-3\",\n          onClick: handleReply,\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMessageDetails, \"YFFn5f1Vj+0pwsIFYqoAdXFiOlU=\", true, function () {\n  return [useParams, useMessageWithReplies, useAuth, useApi];\n});\n_c = MyMessageDetails;\nexport default MyMessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MyMessageDetails\");","map":{"version":3,"names":["useParams","Spinner","useEffect","useState","useAuth","useMessageWithReplies","toast","useApi","jsxDEV","_jsxDEV","MyMessageDetails","_s","messageId","navigate","useNavigate","message","loading","user","post","content","setContent","messageDetails","setMessageDetails","handleReply","error","result","token","console","log","success","err","renderMessage","className","children","sender","firstName","lastName","email","fileName","_jsxFileName","lineNumber","columnNumber","Date","dateTime","toLocaleString","replies","length","map","reply","index","id","splash","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessageDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../hooks/useApi\";\r\n\r\nconst MyMessageDetails = () => {\r\n  const { messageId } = useParams(); \r\n  const navigate = useNavigate();    \r\n\r\n  const {message, loading} = useMessageWithReplies(messageId);\r\n  const {user} = useAuth();\r\n  const {post} = useApi();\r\n\r\n  const [content, setContent] = useState('');\r\n  const [messageDetails, setMessageDetails] = useState();\r\n\r\n  useEffect(() => {\r\n    setMessageDetails(message); \r\n  }, [messageId, message, user]); \r\n\r\n  const handleReply = async () => {\r\n    if (!content) {\r\n      toast.error('Please fill in requierd field');\r\n      return;\r\n    }\r\n    try{\r\n      const result = await post(`/messages/${messageId}/reply`, {content : content}, user.token);\r\n      console.log(result);\r\n\r\n      if (result) {\r\n        toast.success('Note created successfully');\r\n        setContent(\"\");\r\n        navigate(`/messages/${messageId}`);\r\n      } else {\r\n        toast.error('Error creating note');\r\n      }\r\n    } catch (err) {\r\n        toast.error('Error creating note')\r\n    }\r\n  };\r\n  \r\n  const renderMessage = (message) => (\r\n    <div key={message.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {message.sender.firstName} {message.sender.lastName} ({message.sender.email})\r\n      </p>\r\n      <p>{message.content}</p>\r\n      <p>Sent at: {new Date(message.dateTime).toLocaleString()}</p>\r\n      {message.replies && message.replies.length > 0 && (\r\n        <div>\r\n          {message.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message Details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <div>\r\n          {messageDetails && messageDetails.replies && renderMessage(messageDetails)}\r\n          <div className=\"mt-3\">\r\n          <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" value={content} \r\n            onChange={(e) => setContent(e.target.value)} />            \r\n            <button className=\"btn btn-primary my-3\" onClick={handleReply}>Reply</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MyMessageDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
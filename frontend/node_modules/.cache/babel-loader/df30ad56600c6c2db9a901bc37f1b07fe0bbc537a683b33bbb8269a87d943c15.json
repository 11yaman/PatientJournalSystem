{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\employee\\\\MessageDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport Spinner from '../../components/Spinner';\nimport { toast } from 'react-toastify';\nimport useApi from '../../hooks/useApi';\nimport useAuth from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageDetails = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    post\n  } = useApi();\n  const {\n    user\n  } = useAuth();\n  const {\n    message,\n    loading\n  } = useMessageWithReplies(messageId);\n  const [messageDetails, setMessageDetails] = useState([]);\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    setMessageDetails(message);\n  }, [messageId, message]);\n  const handleReply = async () => {\n    if (!content) {\n      toast.error('Please fill in requierd field');\n      return;\n    }\n    try {\n      const result = await post(`/messages/${messageId}/reply`, {\n        content: content\n      }, user.token);\n      console.log(result);\n      if (result) {\n        toast.success('Note created successfully');\n        setContent(\"\");\n        setMessageDetails(prevMessageDetails => [...prevMessageDetails, result]);\n        navigate(`/messages/${messageId}`);\n      } else {\n        toast.error('Error creating note');\n      }\n    } catch (err) {\n      toast.error('Error creating note');\n    }\n  };\n  const renderMessage = message => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient: \", message.sender.firstName, \" \", message.sender.lastName, \" (\", message.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sent at: \", new Date(message.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message.replies && message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageDetails && messageDetails.replies && renderMessage(messageDetails), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply\",\n          className: \"form-control\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-3\",\n          onClick: handleReply,\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageDetails, \"0AOTXRpMDmGeDI76bmYZZpwzklE=\", false, function () {\n  return [useParams, useNavigate, useApi, useAuth, useMessageWithReplies];\n});\n_c = MessageDetails;\nexport default MessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MessageDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useMessageWithReplies","Spinner","toast","useApi","useAuth","jsxDEV","_jsxDEV","MessageDetails","_s","messageId","navigate","post","user","message","loading","messageDetails","setMessageDetails","content","setContent","handleReply","error","result","token","console","log","success","prevMessageDetails","err","renderMessage","className","children","sender","firstName","lastName","email","fileName","_jsxFileName","lineNumber","columnNumber","Date","dateTime","toLocaleString","replies","length","map","reply","index","id","splash","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/employee/MessageDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\nimport Spinner from '../../components/Spinner';\r\nimport { toast } from 'react-toastify';\r\nimport useApi from '../../hooks/useApi';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst MessageDetails = () => {\r\n  const { messageId } = useParams(); \r\n  const navigate = useNavigate();    \r\n  const {post} = useApi();\r\n  const {user} = useAuth();\r\n\r\n  const { message, loading } = useMessageWithReplies(messageId);\r\n  const [messageDetails, setMessageDetails] = useState([]);\r\n\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    setMessageDetails(message);\r\n  }, [messageId, message]);\r\n\r\n  const handleReply = async () => {\r\n    if (!content) {\r\n      toast.error('Please fill in requierd field');\r\n      return;\r\n    }\r\n    try{\r\n      const result = await post(`/messages/${messageId}/reply`, {content : content}, user.token);\r\n      console.log(result);\r\n\r\n      if (result) {\r\n        toast.success('Note created successfully');\r\n        setContent(\"\");\r\n\r\n        setMessageDetails((prevMessageDetails) => [...prevMessageDetails, result]);\r\n        navigate(`/messages/${messageId}`);\r\n      } else {\r\n        toast.error('Error creating note');\r\n      }\r\n    } catch (err) {\r\n        toast.error('Error creating note')\r\n    }\r\n  };\r\n\r\n  const renderMessage = (message) => (\r\n    <div key={message.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {message.sender.firstName} {message.sender.lastName} ({message.sender.email})\r\n      </p>\r\n      <p>{message.content}</p>\r\n      <p>Sent at: {new Date(message.dateTime).toLocaleString()}</p>\r\n      {message.replies && message.replies.length > 0 && (\r\n        <div>\r\n          {message.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message Details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <div>\r\n          {messageDetails && messageDetails.replies && renderMessage(messageDetails)}\r\n          <div className=\"mt-3\">\r\n            <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" value={content} \r\n            onChange={(e) => setContent(e.target.value)} />\r\n            <button className=\"btn btn-primary my-3\" onClick={handleReply}>Reply</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessageDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport useAuth from '../../hooks/useAuth';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessageDetails = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    message: myMessageDetails,\n    loading\n  } = useMessageWithReplies(messageId);\n  const [messageDetails, setMessageDetails] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (user && user.token) {\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\n          console.log(\"id \" + fetchedMessage.id);\n          if (fetchedMessage) {\n            setMessage(fetchedMessage);\n          } else {\n            toast.error('Error fetching message with replies');\n          }\n        }\n      } catch (apiError) {\n        toast.error('Error fetching message with replies');\n      }\n    };\n    fetchData();\n  }, [user]);\n  const renderMessage = message => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient: \", message.sender.firstName, \" \", message.sender.lastName, \" (\", message.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sent at: \", new Date(message.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message.replies && message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageDetails.map(message => renderMessage(message)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-3\",\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMessageDetails, \"qnkloCtaSlxWXjXCnd3sfUiRnK8=\", false, function () {\n  return [useParams, useAuth, useMessageWithReplies];\n});\n_c = MyMessageDetails;\nexport default MyMessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MyMessageDetails\");","map":{"version":3,"names":["useParams","Spinner","useEffect","useState","useAuth","useMessageWithReplies","toast","jsxDEV","_jsxDEV","MyMessageDetails","_s","messageId","user","message","myMessageDetails","loading","messageDetails","setMessageDetails","fetchData","token","fetchedMessage","get","console","log","id","setMessage","error","apiError","renderMessage","className","children","sender","firstName","lastName","email","fileName","_jsxFileName","lineNumber","columnNumber","content","Date","dateTime","toLocaleString","replies","length","map","reply","index","splash","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessageDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst MyMessageDetails = () => {\r\n  const { messageId } = useParams(); \r\n\r\n  const {user} = useAuth();\r\n  \r\n  const { message : myMessageDetails, loading } = useMessageWithReplies(messageId);\r\n  const [messageDetails, setMessageDetails] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token) {\r\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\r\n          console.log(\"id \"+ fetchedMessage.id);\r\n          if (fetchedMessage) {\r\n            setMessage(fetchedMessage);\r\n          } else {\r\n            toast.error('Error fetching message with replies');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching message with replies');\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  const renderMessage = (message) => (\r\n    <div key={message.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {message.sender.firstName} {message.sender.lastName} ({message.sender.email})\r\n      </p>\r\n      <p>{message.content}</p>\r\n      <p>Sent at: {new Date(message.dateTime).toLocaleString()}</p>\r\n      {message.replies && message.replies.length > 0 && (\r\n        <div>\r\n          {message.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <div>\r\n          {messageDetails.map((message) => renderMessage(message))}\r\n          <div className=\"mt-3\">\r\n            <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" />\r\n            <button className=\"btn btn-primary my-3\">Reply</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessageDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
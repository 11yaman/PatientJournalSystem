{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst BASE_URL = \"http://localhost:8080/api/v1\";\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // check if the user is logged in.\n  const checkUserLoggedIn = async () => {\n    try {\n      data;\n      const res = await fetch(`http://localhost:8000/api/me`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const result = await res.json();\n      if (!result.error) {\n        if (location.pathname === \"/login\" || location.pathname === \"/register\") {\n          setTimeout(() => {\n            navigate(\"/\", {\n              replace: true\n            });\n          }, 500);\n        } else {\n          navigate(location.pathname ? location.pathname : \"/\");\n        }\n        setUser(result);\n      } else {\n        navigate(\"/login\", {\n          replace: true\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"data\", result);\n        setUser(result);\n        toast.success(`Logged in ${result.firstName}`);\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const registerPatient = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/patients/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"data\", result);\n        setUser(result);\n        toast.success(\"user registered successfully! login into your account!\");\n        navigate(\"/login\", {\n          replace: true\n        });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerUser,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"nWOkKNc/dLTKcaG9VL+yh87JdTc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","toast","ToastContainer","ToastContext","jsxDEV","_jsxDEV","AuthContext","BASE_URL","AuthContextProvider","children","_s","navigate","location","user","setUser","error","setError","checkUserLoggedIn","data","res","fetch","method","headers","Authorization","localStorage","getItem","result","json","pathname","setTimeout","replace","err","console","log","loginUser","userData","body","JSON","stringify","setItem","success","firstName","registerPatient","Provider","value","registerUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ToastContext from \"./ToastContext\";\r\n\r\nconst AuthContext = createContext();\r\nconst BASE_URL = \"http://localhost:8080/api/v1\";\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const { toast } = useContext(ToastContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  // check if the user is logged in.\r\n  const checkUserLoggedIn = async () => {\r\n    try {data\r\n      const res = await fetch(`http://localhost:8000/api/me`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        if (\r\n          location.pathname === \"/login\" ||\r\n          location.pathname === \"/register\"\r\n        ) {\r\n          setTimeout(() => {\r\n            navigate(\"/\", { replace: true });\r\n          }, 500);\r\n        } else {\r\n          navigate(location.pathname ? location.pathname : \"/\");\r\n        }\r\n        setUser(result);\r\n      } else {\r\n        navigate(\"/login\", { replace: true });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        localStorage.setItem(\"data\", result);\r\n        setUser(result);\r\n        toast.success(`Logged in ${result.firstName}`);\r\n\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        toast.error(result.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const registerPatient = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/patients/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n      const result = await res.json();\r\n\r\n      if (!result.error) {\r\n        localStorage.setItem(\"data\", result);\r\n        setUser(result);\r\n        toast.success(\"user registered successfully! login into your account!\");\r\n        \r\n        navigate(\"/login\", { replace: true });\r\n      } else {\r\n        toast.error(result.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ loginUser, registerUser, user, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessages.js\",\n  _s = $RefreshSig$();\nimport usePatientMessages from \"../../hooks/usePatientMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessages = () => {\n  _s();\n  // Assuming you have a hook or logic to fetch messages for the logged-in patient\n  const {\n    myMessages,\n    loading\n  } = usePatientMessages();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No messages for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n_s(MyMessages, \"tPxkn0fLtg8AK4CgeDm/NInBeY8=\", false, function () {\n  return [usePatientMessages];\n});\n_c = MyMessages;\nexport default MyMessages;\nvar _c;\n$RefreshReg$(_c, \"MyMessages\");","map":{"version":3,"names":["usePatientMessages","jsxDEV","_jsxDEV","MyMessages","_s","myMessages","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","Spinner","splash","length","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessages.js"],"sourcesContent":["import usePatientMessages from \"../../hooks/usePatientMessages\";\r\n\r\nconst MyMessages = () => {\r\n    // Assuming you have a hook or logic to fetch messages for the logged-in patient\r\n    const { myMessages, loading } = usePatientMessages(); \r\n  \r\n    return (\r\n      <div>\r\n        <h1>My Messages</h1>\r\n        {loading ? (\r\n          <Spinner splash=\"Loading Messages...\" />\r\n        ) : (\r\n          <div>\r\n            {myMessages.length === 0 ? (\r\n              <h3>No messages for you</h3>\r\n            ) : (\r\n              <div>\r\n                {/* Similar structure to PatientMessages */}\r\n                {/* ... */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default MyMessages;"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGN,kBAAkB,CAAC,CAAC;EAEpD,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBL,OAAO,gBACNJ,OAAA,CAACU,OAAO;MAACC,MAAM,EAAC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExCT,OAAA;MAAAK,QAAA,EACGF,UAAU,CAACS,MAAM,KAAK,CAAC,gBACtBZ,OAAA;QAAAK,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAE5BT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACP,EAAA,CAvBED,UAAU;EAAA,QAEoBH,kBAAkB;AAAA;AAAAe,EAAA,GAFhDZ,UAAU;AAyBd,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
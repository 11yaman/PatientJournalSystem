{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport useApi from './useApi';\nimport useAuth from './useAuth';\nconst useNotes = patientId => {\n  _s();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const [messages, setMessages] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Assuming fetchPatientNotes is a function in your API module\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user !== null && user.token !== null) {\n          const fetchedNotes = await get(`/patient/${patientId}/notes`, user.token);\n          if (fetchedNotes) {\n            setMessages(fetchedNotes);\n          } else {\n            // Handle error if needed\n            setError('Error fetching patient notes');\n          }\n        }\n      } catch (apiError) {\n        setError('An error occurred while fetching data.');\n        console.error('API Error:', apiError);\n      }\n    };\n    fetchData();\n  }, [patientId]);\n  return {\n    messages,\n    loading,\n    error\n  };\n};\n_s(useNotes, \"oBDreevB8HrXmYf3SqPTusmxkK4=\", false, function () {\n  return [useApi, useAuth];\n});\nexport default useNotes;","map":{"version":3,"names":["useEffect","useApi","useAuth","useNotes","patientId","_s","get","loading","error","messages","setMessages","useState","user","fetchData","JSON","parse","localStorage","getItem","token","fetchedNotes","setError","apiError","console"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/useNotes.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport useApi from './useApi';\r\nimport useAuth from './useAuth';\r\n\r\nconst useNotes = (patientId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const {user} = useAuth()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            // Assuming fetchPatientNotes is a function in your API module\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n            if (user !== null && user.token !== null) {\r\n                const fetchedNotes = await get(`/patient/${patientId}/notes`, user.token);\r\n\r\n                if (fetchedNotes) {\r\n                setMessages(fetchedNotes);\r\n                } else {\r\n                // Handle error if needed\r\n                setError('Error fetching patient notes');\r\n                }\r\n            }\r\n        } catch (apiError) {\r\n        setError('An error occurred while fetching data.');\r\n        console.error('API Error:', apiError);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n  }, [patientId]);\r\n\r\n  return { messages, loading, error };\r\n};\r\n\r\nexport default useNotes;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC9B,MAAM;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,MAAM,CAAC,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAACC;EAAI,CAAC,GAAGV,OAAO,CAAC,CAAC;EAExBF,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAMD,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QAErD,IAAIL,IAAI,KAAK,IAAI,IAAIA,IAAI,CAACM,KAAK,KAAK,IAAI,EAAE;UACtC,MAAMC,YAAY,GAAG,MAAMb,GAAG,CAAE,YAAWF,SAAU,QAAO,EAAEQ,IAAI,CAACM,KAAK,CAAC;UAEzE,IAAIC,YAAY,EAAE;YAClBT,WAAW,CAACS,YAAY,CAAC;UACzB,CAAC,MAAM;YACP;YACAC,QAAQ,CAAC,8BAA8B,CAAC;UACxC;QACJ;MACJ,CAAC,CAAC,OAAOC,QAAQ,EAAE;QACnBD,QAAQ,CAAC,wCAAwC,CAAC;QAClDE,OAAO,CAACd,KAAK,CAAC,YAAY,EAAEa,QAAQ,CAAC;MACrC;IACJ,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEK,QAAQ;IAAEF,OAAO;IAAEC;EAAM,CAAC;AACrC,CAAC;AAACH,EAAA,CAhCIF,QAAQ;EAAA,QACoBF,MAAM,EAGvBC,OAAO;AAAA;AA8BxB,eAAeC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
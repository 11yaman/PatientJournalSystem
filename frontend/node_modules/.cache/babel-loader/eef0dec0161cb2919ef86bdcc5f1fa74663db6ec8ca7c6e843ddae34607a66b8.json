{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\nimport useApi from \"../hooks/useApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  const {\n    get,\n    post,\n    loading,\n    error\n  } = useApi();\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n  const getErrorMessage = status => {\n    switch (status) {\n      case 401:\n        return \"Incorrect user ID or password\";\n      case 403:\n        return \"Access Denied\";\n      case 404:\n        return \"Not found\";\n      case 406:\n        return \"Invalid input data\";\n      case 409:\n        return \"Already exists\";\n      default:\n        return \"An error occurred\";\n    }\n  };\n  const checkUserLoggedIn = async () => {\n    try {\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(\"storedUser: \" + JSON.stringify());\n      if (storedUser) {\n        const result = await get(\"/auth/info\", storedUser.token);\n        if (result) {\n          if (location.pathname === \"/login\" || location.pathname === \"/register\") {\n            setTimeout(() => {\n              navigate(\"/\", {\n                replace: true\n              });\n            }, 500);\n          } else {\n            navigate(location.pathname ? location.pathname : \"/\");\n          }\n          result.token = storedUser.token;\n          setUser(result);\n        } else {\n          navigate(\"/login\", {\n            replace: true\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const result = await post(\"/auth/authenticate\", userData);\n      if (result) {\n        var _location$state, _location$state$from;\n        result.token = window.btoa(userData.email + \":\" + userData.password);\n        console.log(JSON.stringify(result));\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUser(result);\n        toast.success(`Logged in ${result.firstName}`);\n        navigate(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(error.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const registerPatient = async userData => {\n    try {\n      const result = await post(\"/auth/register\", userData);\n      if (result) {\n        result.token = window.btoa(userData.email + \":\" + userData.password);\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUser(result);\n        toast.success(\"User registered successfully!\");\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(error.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const logout = async () => {\n    try {\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      if (storedUser) {\n        await post(\"/auth/logout\", null, storedUser.token);\n        localStorage.removeItem(\"user\");\n        setUser(null);\n        navigate(\"/login\");\n        toast.success(\"Logged out successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      toast.error(\"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerPatient,\n      logout,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"J5uMbalD9t33W1TGWvzz30w5SeQ=\", false, function () {\n  return [useNavigate, useLocation, useApi];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","ToastContext","useApi","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","toast","navigate","location","user","setUser","get","post","loading","error","checkUserLoggedIn","getErrorMessage","status","storedUser","JSON","parse","localStorage","getItem","console","log","stringify","result","token","pathname","setTimeout","replace","err","loginUser","userData","_location$state","_location$state$from","window","btoa","email","password","setItem","success","firstName","state","from","errorMessage","registerPatient","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ToastContext from \"./ToastContext\";\r\nimport useApi from \"../hooks/useApi\"; \r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const { toast } = useContext(ToastContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [user, setUser] = useState(null);\r\n  const { get, post, loading, error } = useApi();  \r\n\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  const getErrorMessage = (status) => {\r\n    switch (status) {\r\n      case 401:\r\n        return \"Incorrect user ID or password\";\r\n      case 403:\r\n        return \"Access Denied\";\r\n      case 404:\r\n        return \"Not found\";\r\n      case 406:\r\n        return \"Invalid input data\";\r\n      case 409:\r\n        return \"Already exists\";\r\n      default:\r\n        return \"An error occurred\";\r\n    }\r\n  };\r\n\r\n  const checkUserLoggedIn = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(\"storedUser: \" + JSON.stringify());\r\n      if (storedUser) {\r\n        const result = await get(\"/auth/info\", storedUser.token);\r\n\r\n        if (result) {\r\n          if (\r\n            location.pathname === \"/login\" ||\r\n            location.pathname === \"/register\"\r\n          ) {\r\n            setTimeout(() => {\r\n              navigate(\"/\", { replace: true });\r\n            }, 500);\r\n          } else {\r\n            navigate(location.pathname ? location.pathname : \"/\");\r\n          }\r\n          result.token = storedUser.token;\r\n          setUser(result);\r\n        } else {\r\n          navigate(\"/login\", { replace: true });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const result = await post(\"/auth/authenticate\", userData);\r\n\r\n      if (result) {\r\n        result.token = window.btoa(userData.email + \":\" + userData.password);\r\n        console.log(JSON.stringify(result));\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(`Logged in ${result.firstName}`);\r\n\r\n        navigate(location.state?.from?.pathname || \"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(error.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const registerPatient = async (userData) => {\r\n    try {\r\n      const result = await post(\"/auth/register\", userData);\r\n\r\n      if (result) {\r\n        result.token = window.btoa(userData.email + \":\" + userData.password);\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(\"User registered successfully!\");\r\n\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(error.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (storedUser) {\r\n        await post(\"/auth/logout\", null, storedUser.token);\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n        navigate(\"/login\");\r\n        toast.success(\"Logged out successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ loginUser, registerPatient, logout, user, setUser }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
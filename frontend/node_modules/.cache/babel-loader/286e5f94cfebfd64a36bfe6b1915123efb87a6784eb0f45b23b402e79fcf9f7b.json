{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport useAuth from './useAuth';\nimport useApi from './useApi';\nconst useMessageWithReplies = messageId => {\n  _s();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const [message, setMessage] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (user && user.token) {\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\n          console.log(\"id \" + fetchedMessage.id);\n          if (fetchedMessage) {\n            setMessage(fetchedMessage);\n          } else {\n            toast.error('Error fetching message with replies');\n          }\n        }\n      } catch (apiError) {\n        toast.error('Error fetching message with replies');\n      }\n    };\n    fetchData();\n  }, [user, messageId]);\n  return {\n    message,\n    loading\n  };\n};\n_s(useMessageWithReplies, \"Q7dizkYC7tQWiKT1GMUl1qQoimo=\", false, function () {\n  return [useApi, useAuth];\n});\nexport default useMessageWithReplies;","map":{"version":3,"names":["useState","useEffect","toast","useAuth","useApi","useMessageWithReplies","messageId","_s","get","loading","error","message","setMessage","user","fetchData","token","fetchedMessage","console","log","id","apiError"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/useMessageWithReplies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport useAuth from './useAuth';\r\nimport useApi from './useApi';\r\n\r\nconst useMessageWithReplies = (messageId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [message, setMessage] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token) {\r\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\r\n          console.log(\"id \"+ fetchedMessage.id);\r\n          if (fetchedMessage) {\r\n            setMessage(fetchedMessage);\r\n          } else {\r\n            toast.error('Error fetching message with replies');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching message with replies');\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, [user, messageId]);\r\n  return { message, loading };\r\n};\r\n\r\nexport default useMessageWithReplies;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,qBAAqB,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGN,MAAM,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM;IAACa;EAAI,CAAC,GAAGV,OAAO,CAAC,CAAC;EAExBF,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAK,EAAE;UACtB,MAAMC,cAAc,GAAG,MAAMR,GAAG,CAAE,aAAYF,SAAU,EAAC,EAAEO,IAAI,CAACE,KAAK,CAAC;UACtEE,OAAO,CAACC,GAAG,CAAC,KAAK,GAAEF,cAAc,CAACG,EAAE,CAAC;UACrC,IAAIH,cAAc,EAAE;YAClBJ,UAAU,CAACI,cAAc,CAAC;UAC5B,CAAC,MAAM;YACLd,KAAK,CAACQ,KAAK,CAAC,qCAAqC,CAAC;UACpD;QACF;MACF,CAAC,CAAC,OAAOU,QAAQ,EAAE;QACjBlB,KAAK,CAACQ,KAAK,CAAC,qCAAqC,CAAC;MACpD;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EAEb,CAAC,EAAE,CAACD,IAAI,EAAEP,SAAS,CAAC,CAAC;EACrB,OAAO;IAAEK,OAAO;IAAEF;EAAQ,CAAC;AAC7B,CAAC;AAACF,EAAA,CA3BIF,qBAAqB;EAAA,QACOD,MAAM,EAGvBD,OAAO;AAAA;AAyBxB,eAAeE,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
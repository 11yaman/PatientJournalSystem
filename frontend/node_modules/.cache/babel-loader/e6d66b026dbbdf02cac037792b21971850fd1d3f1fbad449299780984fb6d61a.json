{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\employee\\\\MessageDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport Spinner from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageDetails = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const {\n    messageWithReplies,\n    loading\n  } = useMessageWithReplies(messageId);\n  const [messageDetails, setMessageDetails] = useState({});\n  const mockMessageDetails = [{\n    id: 1,\n    content: 'hej',\n    dateTime: '2023-11-05T17:31:52.384',\n    sender: {\n      id: 1,\n      email: 'yaman',\n      firstName: 'Yaman',\n      lastName: 'A',\n      role: 'PATIENT'\n    },\n    status: 'ACTIVE',\n    replies: [{\n      id: 6,\n      content: 'reply1',\n      dateTime: '2023-11-10T22:59:01.052195',\n      sender: {\n        id: 1,\n        email: 'yaman',\n        firstName: 'Yaman',\n        lastName: 'A',\n        role: 'PATIENT'\n      }\n    }, {\n      id: 7,\n      content: 'reply2',\n      dateTime: '2023-11-10T23:01:29.942987',\n      sender: {\n        id: 2,\n        email: 'noor',\n        firstName: 'Noor',\n        lastName: 'A',\n        role: 'EMPLOYEE'\n      }\n    }, {\n      id: 7,\n      content: 'reply2',\n      dateTime: '2023-11-10T23:01:29.942987',\n      sender: {\n        id: 2,\n        email: 'noor',\n        firstName: 'Noor',\n        lastName: 'A',\n        role: 'EMPLOYEE'\n      }\n    }, {\n      id: 7,\n      content: 'reply2',\n      dateTime: '2023-11-10T23:01:29.942987',\n      sender: {\n        id: 2,\n        email: 'noor',\n        firstName: 'Noor',\n        lastName: 'A',\n        role: 'EMPLOYEE'\n      }\n    }, {\n      id: 7,\n      content: 'reply2',\n      dateTime: '2023-11-10T23:01:29.942987',\n      sender: {\n        id: 2,\n        email: 'noor',\n        firstName: 'Noor',\n        lastName: 'A',\n        role: 'EMPLOYEE'\n      }\n    }]\n  }];\n  useEffect(() => {\n    setMessageDetails(mockMessageDetails); //messageWithReplies\n  }, [messageId]);\n  const renderMessage = message => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-3 bg-light p-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient: \", message.sender.firstName, \" \", message.sender.lastName, \" (\", message.sender.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sent at: \", new Date(message.dateTime).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), message.replies && message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: message.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded p-2 my-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: reply.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, reply.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [messageDetails.map(message => renderMessage(message)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type your reply\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary my-3\",\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageDetails, \"gkM7wRaaNjBvOvAqkydIIpqfTiQ=\", false, function () {\n  return [useParams, useMessageWithReplies];\n});\n_c = MessageDetails;\nexport default MessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MessageDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useMessageWithReplies","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageDetails","_s","messageId","messageWithReplies","loading","messageDetails","setMessageDetails","mockMessageDetails","id","content","dateTime","sender","email","firstName","lastName","role","status","replies","renderMessage","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","length","map","reply","index","splash","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/employee/MessageDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst MessageDetails = () => {\r\n  const { messageId } = useParams(); \r\n\r\n  const { messageWithReplies, loading } = useMessageWithReplies(messageId);\r\n  const [messageDetails, setMessageDetails] = useState({});\r\n\r\n  const mockMessageDetails = [\r\n    {\r\n      id: 1,\r\n      content: 'hej',\r\n      dateTime: '2023-11-05T17:31:52.384',\r\n      sender: {\r\n        id: 1,\r\n        email: 'yaman',\r\n        firstName: 'Yaman',\r\n        lastName: 'A',\r\n        role: 'PATIENT',\r\n      },\r\n      status: 'ACTIVE',\r\n      replies: [\r\n        {\r\n          id: 6,\r\n          content: 'reply1',\r\n          dateTime: '2023-11-10T22:59:01.052195',\r\n          sender: {\r\n            id: 1,\r\n            email: 'yaman',\r\n            firstName: 'Yaman',\r\n            lastName: 'A',\r\n            role: 'PATIENT',\r\n          },\r\n        },\r\n        {\r\n          id: 7,\r\n          content: 'reply2',\r\n          dateTime: '2023-11-10T23:01:29.942987',\r\n          sender: {\r\n            id: 2,\r\n            email: 'noor',\r\n            firstName: 'Noor',\r\n            lastName: 'A',\r\n            role: 'EMPLOYEE',\r\n          },\r\n        },\r\n        {\r\n          id: 7,\r\n          content: 'reply2',\r\n          dateTime: '2023-11-10T23:01:29.942987',\r\n          sender: {\r\n            id: 2,\r\n            email: 'noor',\r\n            firstName: 'Noor',\r\n            lastName: 'A',\r\n            role: 'EMPLOYEE',\r\n          },\r\n        },\r\n        {\r\n          id: 7,\r\n          content: 'reply2',\r\n          dateTime: '2023-11-10T23:01:29.942987',\r\n          sender: {\r\n            id: 2,\r\n            email: 'noor',\r\n            firstName: 'Noor',\r\n            lastName: 'A',\r\n            role: 'EMPLOYEE',\r\n          },\r\n        },\r\n        {\r\n          id: 7,\r\n          content: 'reply2',\r\n          dateTime: '2023-11-10T23:01:29.942987',\r\n          sender: {\r\n            id: 2,\r\n            email: 'noor',\r\n            firstName: 'Noor',\r\n            lastName: 'A',\r\n            role: 'EMPLOYEE',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setMessageDetails(mockMessageDetails); //messageWithReplies\r\n  }, [messageId]);\r\n\r\n  const renderMessage = (message) => (\r\n    <>\r\n    <div key={message.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {message.sender.firstName} {message.sender.lastName} ({message.sender.email})\r\n      </p>\r\n      <p>{message.content}</p>\r\n      <p>Sent at: {new Date(message.dateTime).toLocaleString()}</p>\r\n      {message.replies && message.replies.length > 0 && (\r\n        <div>\r\n        <>\r\n          {message.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            {messageDetails.map((message) => renderMessage(message))}\r\n            <div className=\"mt-3\">\r\n              <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" />\r\n              <button className=\"btn btn-primary my-3\">Reply</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst usePatientMessages = patientId => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // get token from localstorage and send it\n    // fetchPatientMessages(patientId, token)\n  }, [patientId]);\n  return {\n    messages,\n    loading\n  };\n};\n_s(usePatientMessages, \"iENrkQA4ceL8nzHtV8t1eR+7xGM=\");\nexport default usePatientMessages;","map":{"version":3,"names":["useState","useEffect","usePatientMessages","patientId","_s","messages","setMessages","loading","setLoading"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/usePatientMessages.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst usePatientMessages = (patientId) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // get token from localstorage and send it\r\n    // fetchPatientMessages(patientId, token)\r\n\r\n\r\n  }, [patientId]);\r\n\r\n  return { messages, loading };\r\n};\r\n\r\nexport default usePatientMessages;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CAGD,EAAE,CAACE,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEE,QAAQ;IAAEE;EAAQ,CAAC;AAC9B,CAAC;AAACH,EAAA,CAZIF,kBAAkB;AAcxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
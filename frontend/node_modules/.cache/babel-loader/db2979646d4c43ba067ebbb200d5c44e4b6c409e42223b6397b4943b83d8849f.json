{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessageDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport useAuth from '../../hooks/useAuth';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessageDetails = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    message: myMessageDetails,\n    loading\n  } = useMessageWithReplies(user.id);\n  const [messageDetails, setMessageDetails] = useState({});\n  useEffect(() => {\n    setMessageDetails(mockMessageDetails);\n  }, []);\n  const renderMessage = msg => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient: \", msg.sender.firstName, \" \", msg.sender.lastName, \" (\", msg.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sent at: \", new Date(msg.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), msg.replies && msg.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, msg.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [myMessageDetails.map(message => renderMessage(message)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-3\",\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMessageDetails, \"P2sE2UQb+GY/2FQ1JUf3Z5V5Cxo=\", false, function () {\n  return [useAuth, useMessageWithReplies];\n});\n_c = MyMessageDetails;\nexport default MyMessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MyMessageDetails\");","map":{"version":3,"names":["useParams","Spinner","useEffect","useState","useAuth","useMessageWithReplies","jsxDEV","_jsxDEV","MyMessageDetails","_s","user","message","myMessageDetails","loading","id","messageDetails","setMessageDetails","mockMessageDetails","renderMessage","msg","className","children","sender","firstName","lastName","email","fileName","_jsxFileName","lineNumber","columnNumber","content","Date","dateTime","toLocaleString","replies","length","map","reply","index","splash","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessageDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\n\r\nconst MyMessageDetails = () => {\r\n  const {user} = useAuth();\r\n\r\n  const { message :myMessageDetails, loading } = useMessageWithReplies(user.id);\r\n  const [messageDetails, setMessageDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    setMessageDetails(mockMessageDetails);\r\n  }, []);\r\n\r\n  const renderMessage = (msg) => (\r\n    <div key={msg.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {msg.sender.firstName} {msg.sender.lastName} ({msg.sender.email})\r\n      </p>\r\n      <p>{msg.content}</p>\r\n      <p>Sent at: {new Date(msg.dateTime).toLocaleString()}</p>\r\n      {msg.replies && msg.replies.length > 0 && (\r\n        <div>\r\n          {msg.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message Details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <div>\r\n          {myMessageDetails.map((message) => renderMessage(message))}\r\n          <div className=\"mt-3\">\r\n            <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" />\r\n            <button className=\"btn btn-primary my-3\">Reply</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default MyMessageDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
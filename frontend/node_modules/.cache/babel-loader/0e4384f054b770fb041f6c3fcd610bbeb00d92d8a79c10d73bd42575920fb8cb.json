{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessageDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport useAuth from '../../hooks/useAuth';\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\nimport { toast } from \"react-toastify\";\nimport useApi from \"../../hooks/useApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessageDetails = () => {\n  _s();\n  const {\n    messageId\n  } = useParams();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const {\n    user\n  } = useAuth();\n  const [messageDetails, setMessageDetails] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (user && user.token) {\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\n          console.log(\"id \" + fetchedMessage.id);\n          if (fetchedMessage) {\n            setMessageDetails(fetchedMessage);\n          } else {\n            toast.error('Error fetching message with replies');\n          }\n        }\n      } catch (apiError) {\n        toast.error('Error fetching message with replies');\n      }\n    };\n    fetchData();\n    console.log(\"message replies \" + messageDetails);\n  }, []);\n  const renderReplies = reply => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Written by: \", reply.sender.firstName, \" \", reply.sender.lastName, \" (\", reply.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reply.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created at: \", new Date(reply.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, reply.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  const renderMessage = message => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3 bg-light p-3 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient: \", message.sender.firstName, \" \", message.sender.lastName, \" (\", message.sender.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sent at: \", new Date(message.dateTime).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), message.replies && message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`, \", at \", new Date(reply.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Message Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messageDetails.replies.map(message => renderReplies(message)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary my-3\",\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMessageDetails, \"BCTTNfgV+ytEgrvEFU0enHBy2B8=\", false, function () {\n  return [useParams, useApi, useAuth];\n});\n_c = MyMessageDetails;\nexport default MyMessageDetails;\nvar _c;\n$RefreshReg$(_c, \"MyMessageDetails\");","map":{"version":3,"names":["useParams","Spinner","useEffect","useState","useAuth","useMessageWithReplies","toast","useApi","jsxDEV","_jsxDEV","MyMessageDetails","_s","messageId","get","loading","error","user","messageDetails","setMessageDetails","fetchData","token","fetchedMessage","console","log","id","apiError","renderReplies","reply","className","children","sender","firstName","lastName","email","fileName","_jsxFileName","lineNumber","columnNumber","content","Date","dateTime","toLocaleString","renderMessage","message","replies","length","map","index","splash","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessageDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useMessageWithReplies from \"../../hooks/useMessageWithReplies\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../hooks/useApi\";\r\n\r\nconst MyMessageDetails = () => {\r\n  const { messageId } = useParams(); \r\n  const { get, loading, error } = useApi();\r\n  const {user} = useAuth();\r\n  \r\n  const [messageDetails, setMessageDetails] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token) {\r\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\r\n          console.log(\"id \"+ fetchedMessage.id);\r\n          if (fetchedMessage) {\r\n            setMessageDetails(fetchedMessage);\r\n          } else {\r\n            toast.error('Error fetching message with replies');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching message with replies');\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n    console.log(\"message replies \" +messageDetails)\r\n  }, []);\r\n\r\n\r\n  const renderReplies = (reply) => (\r\n    <div key={reply.id} className='ml-3 bg-light p-3 rounded mb-3'>\r\n      <p>\r\n        Written by: {reply.sender.firstName} {reply.sender.lastName} ({reply.sender.email})\r\n      </p>\r\n      <p>{reply.content}</p>\r\n      <p>Created at: {new Date(reply.dateTime).toLocaleString()}</p>\r\n    </div>\r\n  );\r\n  \r\n\r\n  const renderMessage = (message) => (\r\n    <div key={message.id} className='ml-3 bg-light p-3 rounded'>\r\n      <p>\r\n        Patient: {message.sender.firstName} {message.sender.lastName} ({message.sender.email})\r\n      </p>\r\n      <p>{message.content}</p>\r\n      <p>Sent at: {new Date(message.dateTime).toLocaleString()}</p>\r\n      {message.replies && message.replies.length > 0 && (\r\n        <div>\r\n          {message.replies.map((reply, index) => (\r\n            <div key={reply.id} className=\"border rounded p-2 my-2\">\r\n              <p>{reply.content}</p>\r\n              <p>Sent by: {reply.sender && `${reply.sender.firstName} ${reply.sender.lastName} (${reply.sender.email})`} \r\n                  , at {new Date(reply.dateTime).toLocaleString()}</p>  \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Message details</h1>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Message Details...\" />\r\n      ) : (\r\n        <div>\r\n          {messageDetails.replies.map((message) => renderReplies(message))}\r\n          <div className=\"mt-3\">\r\n            <input type=\"text\" placeholder=\"Type your reply\" className=\"form-control\" />\r\n            <button className=\"btn btn-primary my-3\">Reply</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessageDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
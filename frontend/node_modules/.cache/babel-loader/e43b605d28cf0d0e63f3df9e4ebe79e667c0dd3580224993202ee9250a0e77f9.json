{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\patient\\\\MyMessages.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport useAuth from \"../../hooks/useAuth\";\nimport usePatientMessages from \"../../hooks/usePatientMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyMessages = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    myMessages,\n    loading\n  } = usePatientMessages(user.id);\n  const [messages, setMessages] = useState([]);\n  const mockMessages = [{\n    id: 1,\n    content: 'I need an appointment',\n    dateTime: '2023-11-05T17:31:52.384',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }, {\n    id: 2,\n    content: 'I am feeling bad',\n    dateTime: '2023-11-06T09:15:00.000',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }];\n  useEffect(() => {\n    setMessages(mockMessages); // messages \n  }, []); //messages\n\n  const handleCreateMessage = () => {\n    // Redirect to the \"create message\" page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/mymessages/create\",\n      className: \"btn btn-success mb-3\",\n      children: \"Create New Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Replies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(message.dateTime).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/mymessages/${message.id}`,\n                  className: \"btn btn-info\",\n                  children: \"Replies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMessages, \"WDqlpGsGC0QRwIOa2HvinEpuWf0=\", false, function () {\n  return [useAuth, usePatientMessages];\n});\n_c = MyMessages;\nexport default MyMessages;\nvar _c;\n$RefreshReg$(_c, \"MyMessages\");","map":{"version":3,"names":["useEffect","useState","Link","Spinner","useAuth","usePatientMessages","jsxDEV","_jsxDEV","MyMessages","_s","user","myMessages","loading","id","messages","setMessages","mockMessages","content","dateTime","sender","email","firstName","lastName","role","status","handleCreateMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","splash","length","scope","map","message","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/patient/MyMessages.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport usePatientMessages from \"../../hooks/usePatientMessages\";\r\n\r\nconst MyMessages = () => {\r\n  const { user } = useAuth();\r\n  \r\n  const { myMessages, loading } = usePatientMessages(user.id); \r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const mockMessages = [\r\n    {\r\n      id: 1,\r\n      content: 'I need an appointment',\r\n      dateTime: '2023-11-05T17:31:52.384',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'I am feeling bad',\r\n      dateTime: '2023-11-06T09:15:00.000',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n  ];\r\n    \r\n  useEffect(() => {\r\n    setMessages(mockMessages); // messages \r\n  }, []); //messages\r\n\r\n  const handleCreateMessage = () => {\r\n    // Redirect to the \"create message\" page\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>My messages</h1>\r\n      <Link to=\"/mymessages/create\" className=\"btn btn-success mb-3\">\r\n        Create New Message\r\n      </Link>\r\n      <hr className=\"my-4\" />\r\n\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Messages...\" />\r\n      ) : (\r\n        <div>\r\n          {messages.length === 0 ? (\r\n            <h3>No messages yet</h3>\r\n          ) : (\r\n            <div>\r\n              <table className=\"table table-hover\">\r\n                <thead>\r\n                  <tr className=\"table-dark\">\r\n                    <th scope=\"col\">Content</th>\r\n                    <th scope=\"col\">Date & Time</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Replies</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {messages.map((message) => (\r\n                    <tr key={message.id}>\r\n                      <td>{message.content}</td>\r\n                      <td>{new Date(message.dateTime).toLocaleString()}</td>\r\n                      <td>{message.status}</td>\r\n                      <td>\r\n                        <Link to={`/mymessages/${message.id}`} className=\"btn btn-info\">\r\n                          Replies\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default MyMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
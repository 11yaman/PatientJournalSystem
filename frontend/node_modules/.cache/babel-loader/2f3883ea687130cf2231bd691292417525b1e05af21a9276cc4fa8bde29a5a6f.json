{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst usePatientNotes = patientId => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // get token from localstorage and send it\n    // fetchPatientNotes(patientId, token)\n  }, [patientId]);\n  return {\n    messages,\n    loading\n  };\n};\n_s(usePatientNotes, \"OWiw6xYK6UqySRWWjzGN6db1MoE=\");\nexport default usePatientNotes;","map":{"version":3,"names":["useState","useEffect","usePatientNotes","patientId","_s","messages","setMessages","loading","setLoading"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/usePatientNotes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst usePatientNotes = (patientId) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // get token from localstorage and send it\r\n        // fetchPatientNotes(patientId, token)\r\n\r\n\r\n    }, [patientId]);\r\n\r\n    return { messages, loading };\r\n};\r\n\r\nexport default usePatientNotes;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAIC,SAAS,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ;IACA;EAAA,CAGH,EAAE,CAACE,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEE,QAAQ;IAAEE;EAAQ,CAAC;AAChC,CAAC;AAACH,EAAA,CAZIF,eAAe;AAcrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
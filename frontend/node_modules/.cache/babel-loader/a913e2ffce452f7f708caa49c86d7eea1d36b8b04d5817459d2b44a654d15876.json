{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport useApi from './useApi';\nimport { toast } from 'react-toastify';\nconst usePatients = () => {\n  _s();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const [patients, setPatients] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user !== null && user.token !== null) {\n        const fetchedPatients = await get('/patients/list', user.token);\n        if (fetchedPatients) {\n          setPatients(fetchedPatients);\n        } else {\n          toast.error(\"Error fetching patients\");\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  return {\n    patients,\n    loading,\n    error\n  };\n};\n_s(usePatients, \"V8HlJEnLYpNN7MQk4rHFcU7HDy4=\", true, function () {\n  return [useApi];\n});\nexport default usePatients;","map":{"version":3,"names":["useEffect","useState","useApi","toast","usePatients","_s","get","loading","error","patients","setPatients","user","useAuth","fetchData","JSON","parse","localStorage","getItem","token","fetchedPatients"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/usePatients.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport useApi from './useApi';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst usePatients = () => {\r\n  const { get, loading, error } = useApi();\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n      if (user !== null && user.token !== null) {\r\n        const fetchedPatients = await get('/patients/list', user.token);\r\n\r\n        if (fetchedPatients) {\r\n          setPatients(fetchedPatients);\r\n        } else {\r\n          toast.error(\"Error fetching patients\")\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { patients, loading, error };\r\n};\r\n\r\nexport default usePatients;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGN,MAAM,CAAC,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAACU;EAAI,CAAC,GAAGC,OAAO,CAAC,CAAC;EAExBZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMF,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAErD,IAAIN,IAAI,KAAK,IAAI,IAAIA,IAAI,CAACO,KAAK,KAAK,IAAI,EAAE;QACxC,MAAMC,eAAe,GAAG,MAAMb,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAACO,KAAK,CAAC;QAE/D,IAAIC,eAAe,EAAE;UACnBT,WAAW,CAACS,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLhB,KAAK,CAACK,KAAK,CAAC,yBAAyB,CAAC;QACxC;MACF;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,QAAQ;IAAEF,OAAO;IAAEC;EAAM,CAAC;AACrC,CAAC;AAACH,EAAA,CAzBID,WAAW;EAAA,QACiBF,MAAM;AAAA;AA0BxC,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\employee\\\\PatientMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useMessages from \"../hooks/useMessages\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientMessages = () => {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  //const { messages, loading } = useMessages(); // Assuming useMessages fetches messages from the backend\n  const [patientMessages, setPatientMessages] = useState([]);\n  const mockMessages = [{\n    id: 1,\n    content: 'Hello!',\n    dateTime: '2023-11-05T17:31:52.384',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }, {\n    id: 2,\n    content: 'How are you feeling today?',\n    dateTime: '2023-11-06T09:15:00.000',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }];\n  useEffect(() => {\n    // Fetch messages for the specific patient using 'patientId'\n    // Assuming you have a function to fetch messages, replace 'fetchPatientMessages' with the appropriate function\n    /*fetchPatientMessages(patientId)\r\n      .then((data) => {\r\n        setMessages(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n        // Handle error, show a message, etc.\r\n      });*/\n    setPatientMessages(mockMessages);\n  }, [patientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Messages for Patient ID: \", patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/allpatients\",\n      className: \"btn btn-danger my-2\",\n      children: \"Back to All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: patientMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No messages for this patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Message ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patientMessages.map(message => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(message.dateTime).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientMessages, \"c2llrFPvE9bauwFJKsyV2ZJkcYY=\", false, function () {\n  return [useParams];\n});\n_c = PatientMessages;\nexport default PatientMessages;\nvar _c;\n$RefreshReg$(_c, \"PatientMessages\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useMessages","Spinner","jsxDEV","_jsxDEV","PatientMessages","_s","patientId","patientMessages","setPatientMessages","mockMessages","id","content","dateTime","sender","email","firstName","lastName","role","status","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","loading","splash","length","scope","map","message","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/employee/PatientMessages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport useMessages from \"../hooks/useMessages\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst PatientMessages = () => {\r\n  const { patientId } = useParams();\r\n  //const { messages, loading } = useMessages(); // Assuming useMessages fetches messages from the backend\r\n  const [patientMessages, setPatientMessages] = useState([]);\r\n\r\n\r\n  const mockMessages = [\r\n    {\r\n      id: 1,\r\n      content: 'Hello!',\r\n      dateTime: '2023-11-05T17:31:52.384',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'How are you feeling today?',\r\n      dateTime: '2023-11-06T09:15:00.000',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n  ];\r\n    \r\n  useEffect(() => {\r\n    // Fetch messages for the specific patient using 'patientId'\r\n    // Assuming you have a function to fetch messages, replace 'fetchPatientMessages' with the appropriate function\r\n    /*fetchPatientMessages(patientId)\r\n      .then((data) => {\r\n        setMessages(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n        // Handle error, show a message, etc.\r\n      });*/\r\n    setPatientMessages(mockMessages);\r\n  }, [patientId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages for Patient ID: {patientId}</h1>\r\n      <Link to=\"/allpatients\" className=\"btn btn-danger my-2\">\r\n        Back to All Patients\r\n      </Link>\r\n      <hr className=\"my-4\" />\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Messages...\" />\r\n      ) : (\r\n        <div>\r\n          {patientMessages.length === 0 ? (\r\n            <h3>No messages for this patient</h3>\r\n          ) : (\r\n            <div>\r\n              <table className=\"table table-hover\">\r\n                <thead>\r\n                  <tr className=\"table-dark\">\r\n                    <th scope=\"col\">Message ID</th>\r\n                    <th scope=\"col\">Content</th>\r\n                    <th scope=\"col\">Date & Time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {patientMessages.map((message) => (\r\n                    <tr key={message.id}>\r\n                      <td>{message.id}</td>\r\n                      <td>{message.content}</td>\r\n                      <td>{new Date(message.dateTime).toLocaleString()}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientMessages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
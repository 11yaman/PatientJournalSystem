{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useMessages = patientId => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // get token from localstorage and send it\n\n    /*\r\n    fetchPatientMessages(patientId)\r\n      .then((data) => {\r\n        setMessages(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n        // Handle error, show a message, etc.\r\n      });\r\n    */\n  }, [patientId]);\n  return {\n    messages,\n    loading\n  };\n};\n_s(useMessages, \"iENrkQA4ceL8nzHtV8t1eR+7xGM=\");\nexport default useMessages;","map":{"version":3,"names":["useState","useEffect","useMessages","patientId","_s","messages","setMessages","loading","setLoading"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/useMessages.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useMessages = (patientId) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // get token from localstorage and send it\r\n\r\n    /*\r\n    fetchPatientMessages(patientId)\r\n      .then((data) => {\r\n        setMessages(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n        // Handle error, show a message, etc.\r\n      });\r\n    */\r\n\r\n  }, [patientId]);\r\n\r\n  return { messages, loading };\r\n};\r\n\r\nexport default useMessages;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAIC,SAAS,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATI,CAWD,EAAE,CAACE,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEE,QAAQ;IAAEE;EAAQ,CAAC;AAC9B,CAAC;AAACH,EAAA,CArBIF,WAAW;AAuBjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
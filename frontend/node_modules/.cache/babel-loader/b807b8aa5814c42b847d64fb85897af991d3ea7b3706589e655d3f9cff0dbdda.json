{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst BASE_URL = \"http://localhost:8080/api/v1\";\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n  const getErrorMessage = status => {\n    switch (status) {\n      case 401:\n        return \"Incorrect user ID or password\";\n      case 403:\n        return \"Access Denied\";\n      case 404:\n        return \"Not found\";\n      case 406:\n        return \"Invalid input\";\n      case 409:\n        return \"Email already exists\";\n      default:\n        return \"An error occurred\";\n    }\n  };\n  const checkUserLoggedIn = async () => {\n    const sessionID = localStorage.getItem(\"sessionID\");\n    if (sessionID) {\n      try {\n        const res = await fetch(`${BASE_URL}/auth/info`, {\n          method: \"GET\",\n          \"Session-Id\": sessionID\n        });\n        if (res.ok) {\n          const result = await res.json();\n          if (location.pathname === \"/login\" || location.pathname === \"/register\") {\n            setTimeout(() => {\n              navigate(\"/\", {\n                replace: true\n              });\n            }, 500);\n          } else {\n            navigate(location.pathname ? location.pathname : \"/\");\n          }\n          setUser(result);\n        } else {\n          navigate(\"/login\", {\n            replace: true\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      navigate(\"/login\", {\n        replace: true\n      });\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      if (res.ok) {\n        const result = await res.json();\n        localStorage.setItem(\"data\", result);\n        setUser(result);\n        toast.success(`Logged in ${result.firstName}`);\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(res.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const registerPatient = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      if (res.ok) {\n        const result = await res.json();\n        localStorage.setItem(\"data\", result);\n        setUser(result);\n        toast.success(\"user registered successfully!\");\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(res.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const logout = async () => {\n    try {\n      await fetch(`${BASE_URL}/auth/logout`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"data\")}`\n        }\n      });\n      localStorage.removeItem(\"data\");\n      setUser(null);\n      navigate(\"/login\");\n      toast.success(\"Logged out successfully\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      toast.error(\"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerPatient,\n      logout,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"STc17K4MmaE1kxnTuMpdn8oWBXA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","ToastContext","jsxDEV","_jsxDEV","AuthContext","BASE_URL","AuthContextProvider","children","_s","toast","navigate","location","user","setUser","checkUserLoggedIn","getErrorMessage","status","sessionID","localStorage","getItem","res","fetch","method","ok","result","json","pathname","setTimeout","replace","err","console","log","loginUser","userData","headers","body","JSON","stringify","setItem","success","firstName","errorMessage","error","registerPatient","logout","Authorization","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ToastContext from \"./ToastContext\";\r\n\r\nconst AuthContext = createContext();\r\nconst BASE_URL = \"http://localhost:8080/api/v1\";\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const { toast } = useContext(ToastContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  const getErrorMessage = (status) => {\r\n    switch (status) {\r\n      case 401:\r\n        return \"Incorrect user ID or password\";\r\n      case 403:\r\n        return \"Access Denied\";\r\n      case 404:\r\n        return \"Not found\";\r\n      case 406:\r\n        return \"Invalid input\";\r\n      case 409:\r\n        return \"Email already exists\";\r\n      default:\r\n        return \"An error occurred\";\r\n    }\r\n  };\r\n\r\n  const checkUserLoggedIn = async () => {\r\n    const sessionID = localStorage.getItem(\"sessionID\");\r\n    if (sessionID) {\r\n      try {\r\n        const res = await fetch(`${BASE_URL}/auth/info`, {\r\n          method: \"GET\",\r\n          \"Session-Id\": sessionID,\r\n        });\r\n        if (res.ok) {\r\n          const result = await res.json(); \r\n          if (\r\n            location.pathname === \"/login\" ||\r\n            location.pathname === \"/register\"\r\n          ) {\r\n            setTimeout(() => {\r\n              navigate(\"/\", { replace: true });\r\n            }, 500);\r\n          } else {\r\n            navigate(location.pathname ? location.pathname : \"/\");\r\n          }\r\n          setUser(result);\r\n        } else {\r\n          navigate(\"/login\", { replace: true });\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      } \r\n      } else {\r\n        navigate(\"/login\", { replace: true });\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        localStorage.setItem(\"data\", result);\r\n        setUser(result);\r\n        toast.success(`Logged in ${result.firstName}`);\r\n\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(res.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const registerPatient = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        localStorage.setItem(\"data\", result);\r\n        setUser(result);\r\n        toast.success(\"user registered successfully!\");\r\n        \r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(res.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await fetch(`${BASE_URL}/auth/logout`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"data\")}`,\r\n        },\r\n      });\r\n      localStorage.removeItem(\"data\");\r\n      setUser(null);\r\n      navigate(\"/login\");\r\n      toast.success(\"Logged out successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ loginUser, registerPatient, logout, user, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport useApi from './useApi';\nimport useAuth from './useAuth';\nimport { toast } from 'react-toastify';\nconst useNotes = patientId => {\n  _s();\n  const {\n    get,\n    loading,\n    error\n  } = useApi();\n  const [messages, setMessages] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (user && user.token) {\n          const fetchedNotes = await get(`/patients/${patientId}/notes/list`, user.token);\n          if (fetchedNotes) {\n            setMessages(fetchedNotes);\n          } else {\n            toast.error('Error fetching patient notes');\n          }\n        }\n      } catch (apiError) {\n        toast.error('Error fetching patient notes');\n      }\n    };\n    fetchData();\n  }, [patientId]);\n  return {\n    messages,\n    loading,\n    error\n  };\n};\n_s(useNotes, \"oBDreevB8HrXmYf3SqPTusmxkK4=\", false, function () {\n  return [useApi, useAuth];\n});\nexport default useNotes;","map":{"version":3,"names":["useEffect","useState","useApi","useAuth","toast","useNotes","patientId","_s","get","loading","error","messages","setMessages","user","fetchData","token","fetchedNotes","apiError"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/hooks/useNotes.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport useApi from './useApi';\r\nimport useAuth from './useAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useNotes = (patientId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token ) {\r\n          const fetchedNotes = await get(`/patients/${patientId}/notes/list`, user.token);\r\n\r\n          if (fetchedNotes) {\r\n            setMessages(fetchedNotes);\r\n          } else {\r\n            toast.error('Error fetching patient notes');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching patient notes');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [patientId]);\r\n\r\n  return { messages, loading, error };\r\n};\r\n\r\nexport default useNotes;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC9B,MAAM;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,MAAM,CAAC,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAACY;EAAI,CAAC,GAAGV,OAAO,CAAC,CAAC;EAExBH,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAK,EAAG;UACvB,MAAMC,YAAY,GAAG,MAAMR,GAAG,CAAE,aAAYF,SAAU,aAAY,EAAEO,IAAI,CAACE,KAAK,CAAC;UAE/E,IAAIC,YAAY,EAAE;YAChBJ,WAAW,CAACI,YAAY,CAAC;UAC3B,CAAC,MAAM;YACLZ,KAAK,CAACM,KAAK,CAAC,8BAA8B,CAAC;UAC7C;QACF;MACF,CAAC,CAAC,OAAOO,QAAQ,EAAE;QACjBb,KAAK,CAACM,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEK,QAAQ;IAAEF,OAAO;IAAEC;EAAM,CAAC;AACrC,CAAC;AAACH,EAAA,CA3BIF,QAAQ;EAAA,QACoBH,MAAM,EAGvBC,OAAO;AAAA;AAyBxB,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
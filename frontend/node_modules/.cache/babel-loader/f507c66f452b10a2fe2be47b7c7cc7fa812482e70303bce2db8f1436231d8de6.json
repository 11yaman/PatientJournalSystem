{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\pages\\\\employee\\\\PatientMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport usePatientMessages from \"../../hooks/usePatientMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const {\n    patientMessages,\n    loading\n  } = usePatientMessages(patientId);\n  const [messages, setMessages] = useState([]);\n  const mockMessages = [{\n    id: 1,\n    content: 'I need an appointment',\n    dateTime: '2023-11-05T17:31:52.384',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }, {\n    id: 2,\n    content: 'I am feeling bad',\n    dateTime: '2023-11-06T09:15:00.000',\n    sender: {\n      id: 1,\n      email: 'employee@example.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      role: 'EMPLOYEE'\n    },\n    status: 'ACTIVE'\n  }];\n  useEffect(() => {\n    setMessageDetails(mockMessageDetails); //messageWithReplies\n  }, [messageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages for Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/allpatients\",\n      className: \"btn btn-danger my-2\",\n      children: \"Back to All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      splash: \"Loading Messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No messages for this patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Replies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(message.dateTime).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: message.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/messages/${message.id}`,\n                  className: \"btn btn-info\",\n                  children: \"Replies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: console.log(\"Archived\"),\n                  children: \"Archive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"xGN8m9WPE+sQouPXL/FO/j1nSxc=\", false, function () {\n  return [useParams, usePatientMessages];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Spinner","usePatientMessages","jsxDEV","_jsxDEV","Messages","_s","patientId","patientMessages","loading","messages","setMessages","mockMessages","id","content","dateTime","sender","email","firstName","lastName","role","status","setMessageDetails","mockMessageDetails","messageId","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","splash","length","scope","map","message","Date","toLocaleString","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/pages/employee/PatientMessages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport usePatientMessages from \"../../hooks/usePatientMessages\";\r\n\r\nconst Messages = () => {\r\n  const { patientId } = useParams();\r\n\r\n  const { patientMessages, loading } = usePatientMessages(patientId); \r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const mockMessages = [\r\n    {\r\n      id: 1,\r\n      content: 'I need an appointment',\r\n      dateTime: '2023-11-05T17:31:52.384',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'I am feeling bad',\r\n      dateTime: '2023-11-06T09:15:00.000',\r\n      sender: {\r\n        id: 1,\r\n        email: 'employee@example.com',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        role: 'EMPLOYEE',\r\n      },\r\n      status: 'ACTIVE',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setMessageDetails(mockMessageDetails); //messageWithReplies\r\n  }, [messageId]);\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages for Patient</h1>\r\n      <Link to=\"/allpatients\" className=\"btn btn-danger my-2\">\r\n        Back to All Patients\r\n      </Link>\r\n      <hr className=\"my-4\" />\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Messages...\" />\r\n      ) : (\r\n        <div>\r\n          {messages.length === 0 ? (\r\n            <h3>No messages for this patient</h3>\r\n          ) : (\r\n            <div>\r\n              <table className=\"table table-hover\">\r\n                <thead>\r\n                  <tr className=\"table-dark\">\r\n                    <th scope=\"col\">Content</th>\r\n                    <th scope=\"col\">Date & Time</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Replies</th>\r\n                    <th scope=\"col\"></th>\r\n\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {messages.map((message) => (\r\n                    <tr key={message.id}>\r\n                      <td>{message.content}</td>\r\n                      <td>{new Date(message.dateTime).toLocaleString()}</td>\r\n                      <td>{message.status}</td>\r\n                      <td>\r\n                        <Link to={`/messages/${message.id}`} className=\"btn btn-info\">\r\n                          Replies\r\n                        </Link>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          onClick={console.log(\"Archived\")}\r\n                        >\r\n                          Archive\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaman\\\\GitHub\\\\JournalSystem\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst BASE_URL = \"http://localhost:8080/api/v1\";\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n  const getErrorMessage = status => {\n    switch (status) {\n      case 401:\n        return \"Incorrect user ID or password\";\n      case 403:\n        return \"Access Denied\";\n      case 404:\n        return \"Not found\";\n      case 406:\n        return \"Invalid input data\";\n      case 409:\n        return \"Already exists\";\n      default:\n        return \"An error occurred\";\n    }\n  };\n  const checkUserLoggedIn = async () => {\n    try {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      console.log(\"storedUser: \" + JSON.stringify(storedUser));\n      if (storedUser) {\n        const res = await fetch(`${BASE_URL}/auth/info`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Basic ${storedUser.token}`\n          }\n        });\n        if (res.ok) {\n          const result = await res.json();\n          if (location.pathname === \"/login\" || location.pathname === \"/register\") {\n            setTimeout(() => {\n              navigate(\"/\", {\n                replace: true\n              });\n            }, 500);\n          } else {\n            navigate(location.pathname ? location.pathname : \"/\");\n          }\n          setUser(result);\n        } else {\n          navigate(\"/login\", {\n            replace: true\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      if (res.ok) {\n        const result = await res.json();\n        result.token = window.btoa(userData.email + ':' + userData.password);\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUser(result);\n        toast.success(`Logged in ${result.firstName}`);\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(res.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const registerPatient = async userData => {\n    try {\n      const res = await fetch(`${BASE_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      if (res.ok) {\n        const result = await res.json();\n        result.token = window.btoa(userData.email + ':' + userData.password);\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUser(result);\n        toast.success(\"user registered successfully!\");\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        const errorMessage = getErrorMessage(res.status);\n        toast.error(errorMessage);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"An error occurred\");\n    }\n  };\n  const logout = async () => {\n    try {\n      await fetch(`${BASE_URL}/auth/logout`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`\n        }\n      });\n      localStorage.removeItem(\"user\");\n      setUser(null);\n      navigate(\"/login\");\n      toast.success(\"Logged out successfully\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      toast.error(\"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerPatient,\n      logout,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"STc17K4MmaE1kxnTuMpdn8oWBXA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","ToastContext","jsxDEV","_jsxDEV","AuthContext","BASE_URL","AuthContextProvider","children","_s","toast","navigate","location","user","setUser","checkUserLoggedIn","getErrorMessage","status","storedUser","JSON","parse","localStorage","getItem","console","log","stringify","res","fetch","method","headers","Authorization","token","ok","result","json","pathname","setTimeout","replace","err","loginUser","userData","body","window","btoa","email","password","setItem","success","firstName","errorMessage","error","registerPatient","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yaman/GitHub/JournalSystem/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ToastContext from \"./ToastContext\";\r\n\r\nconst AuthContext = createContext();\r\nconst BASE_URL = \"http://localhost:8080/api/v1\";\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const { toast } = useContext(ToastContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  const getErrorMessage = (status) => {\r\n    switch (status) {\r\n      case 401:\r\n        return \"Incorrect user ID or password\";\r\n      case 403:\r\n        return \"Access Denied\";\r\n      case 404:\r\n        return \"Not found\";\r\n      case 406:\r\n        return \"Invalid input data\";\r\n      case 409:\r\n        return \"Already exists\";\r\n      default:\r\n        return \"An error occurred\";\r\n    }\r\n  };\r\n\r\n  const checkUserLoggedIn = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      console.log(\"storedUser: \" +  JSON.stringify(storedUser));\r\n      if (storedUser) {\r\n        const res = await fetch(`${BASE_URL}/auth/info`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Basic ${storedUser.token}`,\r\n          },\r\n        });\r\n        if (res.ok) {\r\n          const result = await res.json(); \r\n          if (\r\n            location.pathname === \"/login\" ||\r\n            location.pathname === \"/register\"\r\n          ) {\r\n            setTimeout(() => {\r\n              navigate(\"/\", { replace: true });\r\n            }, 500);\r\n          } else {\r\n            navigate(location.pathname ? location.pathname : \"/\");\r\n          }\r\n          setUser(result);\r\n        } else {\r\n          navigate(\"/login\", { replace: true });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/authenticate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        result.token = window.btoa(userData.email + ':' + userData.password);\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(`Logged in ${result.firstName}`);\r\n\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(res.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const registerPatient = async (userData) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        result.token = window.btoa(userData.email + ':' + userData.password);\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(\"user registered successfully!\");\r\n        \r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(res.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await fetch(`${BASE_URL}/auth/logout`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\r\n        },\r\n      });\r\n      localStorage.removeItem(\"user\");\r\n      setUser(null);\r\n      navigate(\"/login\");\r\n      toast.success(\"Logged out successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ loginUser, registerPatient, logout, user, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
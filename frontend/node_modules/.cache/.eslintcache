[{"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\index.js":"1","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\App.js":"2","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Layout.js":"4","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Login.js":"6","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Home.js":"7","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Register.js":"8","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\AuthContext.js":"9","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\ToastContext.js":"10","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatients.js":"11","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Spinner.js":"12","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\AllPatients.js":"13","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Patient.js":"14","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientMessages.js":"15","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\MessageDetails.js":"16","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\apis\\PatientApi.js":"17","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatientMessages.js":"18","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessageWithReplies.js":"19","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\apis\\MessageApi.js":"20"},{"size":597,"mtime":1699899103980,"results":"21","hashOfConfig":"22"},{"size":1456,"mtime":1699906715844,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1699899103980,"results":"24","hashOfConfig":"22"},{"size":238,"mtime":1699899103980,"results":"25","hashOfConfig":"22"},{"size":2080,"mtime":1699899109588,"results":"26","hashOfConfig":"22"},{"size":2108,"mtime":1699899103980,"results":"27","hashOfConfig":"22"},{"size":113,"mtime":1699899103980,"results":"28","hashOfConfig":"22"},{"size":3746,"mtime":1699899103980,"results":"29","hashOfConfig":"22"},{"size":4350,"mtime":1699989037016,"results":"30","hashOfConfig":"22"},{"size":438,"mtime":1699899103980,"results":"31","hashOfConfig":"22"},{"size":772,"mtime":1699983306158,"results":"32","hashOfConfig":"22"},{"size":366,"mtime":1699899109588,"results":"33","hashOfConfig":"22"},{"size":3209,"mtime":1699988254793,"results":"34","hashOfConfig":"22"},{"size":1813,"mtime":1699905866216,"results":"35","hashOfConfig":"22"},{"size":3019,"mtime":1699989262791,"results":"36","hashOfConfig":"22"},{"size":3602,"mtime":1699989289248,"results":"37","hashOfConfig":"22"},{"size":559,"mtime":1699987651561,"results":"38","hashOfConfig":"22"},{"size":410,"mtime":1699989105556,"results":"39","hashOfConfig":"22"},{"size":475,"mtime":1699989305277,"results":"40","hashOfConfig":"22"},{"size":149,"mtime":1699988961293,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"oqkcxn",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\index.js",[],[],["108"],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\App.js",["109","110"],[],"import React from 'react';\r\nimport './App.css';\r\nimport Patient from './pages/Patient';\r\nimport TestData from './TestData.json';\r\nimport Layout from './components/Layout';\r\nimport {Routes as Switch, Route} from 'react-router-dom';\r\nimport Register from './pages/Register';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport { AuthContextProvider } from './context/AuthContext';\r\nimport { ToastContextProvider } from './context/ToastContext';\r\nimport AllPatients from './pages/employee/AllPatients';\r\nimport PatientMessages from './pages/employee/PatientMessages';\r\nimport MessageDetails from './pages/employee/MessageDetails';\r\n\r\nfunction App() {\r\n    const user = TestData.find(patient => patient.id === 1);\r\n  return (\r\n    <ToastContextProvider>\r\n      <AuthContextProvider>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/\" element={<Home/>} />\r\n            <Route path=\"/login\" element={<Login/>} />\r\n            <Route path=\"/register\" element={<Register/>} />\r\n\r\n            //admin\r\n            <Route path=\"/allpatients\" element={<AllPatients />} />\r\n            <Route path=\"/patient/:id\" element={<Patient />} />\r\n            <Route path=\"/patient/:id/messages\" element={<PatientMessages />} />\r\n            <Route path=\"/messages/:id\" element={<MessageDetails />} />\r\n          </Switch> \r\n        </Layout>\r\n      </AuthContextProvider>\r\n    </ToastContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Layout.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Navbar.js",["111","112","113","114"],[],"import {Link} from 'react-router-dom';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Navbar = ({title = \"Patient Journal System\"}) => {\r\n  const {user, logout} = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-primary\" data-bs-theme=\"dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {title}\r\n          </a>\r\n        </Link>\r\n        <button \r\n          className=\"navbar-toggler\" \r\n          type=\"button\" \r\n          data-bs-toggle=\"collapse\" \r\n          data-bs-target=\"#navbarColor01\" \r\n          aria-controls=\"navbarColor01\" \r\n          aria-expanded=\"false\" \r\n          aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            {user ? <>       \r\n              <li className=\"nav-item\">\r\n                <Link to=\"/allpatients\">\r\n                  <a className=\"nav-link\">\r\n                    All patients\r\n                  </a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={handleLogout}>\r\n                <button className=\"btn btn-danger\">\r\n                  Log out\r\n                </button>   \r\n              </li>               \r\n            </> : <>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/login\">\r\n                  <a className=\"nav-link\">\r\n                    Login\r\n                  </a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/register\">\r\n                  <a className=\"nav-link\">\r\n                    Register\r\n                  </a>\r\n                </Link>\r\n              </li>\r\n            </>}\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Login.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Home.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Register.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\AuthContext.js",["115"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\ToastContext.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatients.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\AllPatients.js",["116","117"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\n//import { Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ToastContext from \"../../context/ToastContext\";\r\nimport usePatients from \"../../hooks/usePatients\";\r\n\r\nconst AllPatients = () => {\r\n  const { patients, loading } = usePatients([]);\r\n  const [allPatients, setAllPatients] = useState(patients);\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setAllPatients(patients);\r\n  }, [patients]);\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newSearchUser = patients.filter((patient) =>\r\n      patient.firstName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n      patient.lastName.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n    setAllPatients(newSearchUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>All Patients</h1>\r\n        <a href=\"/allpatients\" className=\"btn btn-danger my-2\">\r\n          Reload Patient List\r\n        </a>\r\n        <hr className=\"my-4\" />\r\n        {loading ? (\r\n          <Spinner splash=\"Loading Patients...\" />\r\n        ) : (\r\n          <>\r\n            {allPatients.length === 0 ? ( // Use 'allPatients' for display\r\n              <h3>No patients found</h3>\r\n            ) : (\r\n              <>\r\n                <form className=\"d-flex\" onSubmit={handleSearchSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"searchInput\"\r\n                    id=\"searchInput\"\r\n                    className=\"form-control my-2\"\r\n                    placeholder=\"Search Patient\"\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-info mx-2\">\r\n                    Search\r\n                  </button>\r\n                </form>\r\n\r\n                <p>\r\n                  Total Patients: <strong>{allPatients.length}</strong>\r\n                </p>\r\n                <table className=\"table table-hover\">\r\n                  <thead>\r\n                    <tr className=\"table-dark\">\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Profile</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allPatients.map((patient) => ( // Display 'allPatients' instead of 'patients'\r\n                      <tr key={patient._id}>\r\n                        <th scope=\"row\">{patient.firstName + \" \" + patient.lastName}</th>\r\n                        <td>{patient.email}</td>\r\n                        <td>\r\n                          <Link to={`/patient/${patient.id}`} className=\"btn btn-info my-2\">\r\n                            Profile\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllPatients;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\Patient.js",["118","119"],[],"import React, { useState } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Patient = () => {\r\n    const { id } = useParams();\r\n    // Fetch patient data using 'id'\r\n    const patient = {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        username: \"Johndoe@kth.se\",\r\n        age: 30,\r\n        diagnosis: \"Fever\"\r\n    }\r\n\r\n    const handleButtonClick1 = () => {\r\n        console.log('Show Notes');\r\n    };\r\n\r\n    const handleButtonClick2 = () => {\r\n        console.log('Show Messages');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h1>Patient Information</h1>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>ID:</td>\r\n                        <td>{patient.id}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Name:</td>\r\n                        <td>{patient.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Username:</td>\r\n                        <td>{patient.username}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Age:</td>\r\n                        <td>{patient.age}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Diagnosis:</td>\r\n                        <td>{patient.diagnosis}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"mt-4\">\r\n                <button className=\"btn btn-primary me-2\" onClick={handleButtonClick1}>Notes</button>\r\n                <Link to={`/patient/${id}/messages`} className=\"btn btn-info me-2\">\r\n                    Messages\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patient;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientMessages.js",["120","121"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\MessageDetails.js",["122","123","124"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\apis\\PatientApi.js",["125"],[],"const BASE_URL = 'http://localhost:8080/api/v1';\r\n\r\nexport const fetchAllPatients = async (token) => {\r\n  try {\r\n    console.log(token);\r\n    const res = await fetch(`http://localhost:8080/api/v1/patients/list`, {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      console.log(result);\r\n      return result;\r\n    } else {\r\n      console.log(res.status, res.statusText);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return [];\r\n  }\r\n};\r\n\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatientMessages.js",["126","127"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessageWithReplies.js",["128","129","130"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\apis\\MessageApi.js",[],[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":17,"column":11,"nodeType":"135","messageId":"136","endLine":17,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":25,"column":61,"nodeType":"139","messageId":"140","endLine":28,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":16,"column":11,"nodeType":"143","endLine":16,"endColumn":48},{"ruleId":"141","severity":1,"message":"144","line":35,"column":19,"nodeType":"143","endLine":35,"endColumn":43},{"ruleId":"141","severity":1,"message":"144","line":48,"column":19,"nodeType":"143","endLine":48,"endColumn":43},{"ruleId":"141","severity":1,"message":"144","line":55,"column":19,"nodeType":"143","endLine":55,"endColumn":43},{"ruleId":"145","severity":1,"message":"146","line":18,"column":6,"nodeType":"147","endLine":18,"endColumn":8,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"149","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":27},{"ruleId":"133","severity":1,"message":"150","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":20},{"ruleId":"133","severity":1,"message":"151","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"152","line":19,"column":11,"nodeType":"135","messageId":"136","endLine":19,"endColumn":29},{"ruleId":"133","severity":1,"message":"153","line":9,"column":11,"nodeType":"135","messageId":"136","endLine":9,"endColumn":26},{"ruleId":"145","severity":1,"message":"154","line":43,"column":6,"nodeType":"147","endLine":43,"endColumn":17,"suggestions":"155"},{"ruleId":"133","severity":1,"message":"156","line":8,"column":11,"nodeType":"135","messageId":"136","endLine":8,"endColumn":29},{"ruleId":"133","severity":1,"message":"157","line":8,"column":31,"nodeType":"135","messageId":"136","endLine":8,"endColumn":38},{"ruleId":"145","severity":1,"message":"158","line":91,"column":6,"nodeType":"147","endLine":91,"endColumn":17,"suggestions":"159"},{"ruleId":"133","severity":1,"message":"160","line":1,"column":7,"nodeType":"135","messageId":"136","endLine":1,"endColumn":15},{"ruleId":"133","severity":1,"message":"161","line":4,"column":20,"nodeType":"135","messageId":"136","endLine":4,"endColumn":31},{"ruleId":"133","severity":1,"message":"162","line":5,"column":19,"nodeType":"135","messageId":"136","endLine":5,"endColumn":29},{"ruleId":"133","severity":1,"message":"163","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":33},{"ruleId":"133","severity":1,"message":"164","line":5,"column":19,"nodeType":"135","messageId":"136","endLine":5,"endColumn":29},{"ruleId":"133","severity":1,"message":"162","line":6,"column":19,"nodeType":"135","messageId":"136","endLine":6,"endColumn":29},"no-new-object",["165"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'useContext' is defined but never used.","'ToastContext' is defined but never used.","'useState' is defined but never used.","'handleButtonClick2' is assigned a value but never used.","'patientMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mockMessages'. Either include it or remove the dependency array.",["167"],"'messageWithReplies' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mockMessageDetails'. Either include it or remove the dependency array.",["168"],"'BASE_URL' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'fetchMessageWithReplies' is defined but never used.","'setMessage' is assigned a value but never used.","no-object-constructor",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [checkUserLoggedIn]",{"range":"175","text":"176"},"Update the dependencies array to be: [mockMessages, patientId]",{"range":"177","text":"178"},"Update the dependencies array to be: [messageId, mockMessageDetails]",{"range":"179","text":"180"},[592,594],"[checkUserLoggedIn]",[1122,1133],"[mockMessages, patientId]",[2341,2352],"[messageId, mockMessageDetails]"]
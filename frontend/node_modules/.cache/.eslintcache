[{"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\index.js":"1","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\App.js":"3","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\AuthContext.js":"4","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\utils\\RequireAuth.js":"5","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Layout.js":"6","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\ToastContext.js":"7","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientMessages.js":"8","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Home.js":"9","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyMessageDetails.js":"10","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyMessages.js":"11","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\CreateMessage.js":"12","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Register.js":"13","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Login.js":"14","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\MessageDetails.js":"15","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientInfo.js":"16","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientNotes.js":"17","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\AllPatients.js":"18","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyInfo.js":"19","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyNotes.js":"20","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Navbar.js":"21","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Spinner.js":"22","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useAuth.js":"23","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessageWithReplies.js":"24","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatients.js":"25","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\ActiveMessages.js":"26","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessages.js":"27","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useNotes.js":"28","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useApi.js":"29","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\CreateEmployee.js":"30"},{"size":597,"mtime":1700520772801,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1699899103980,"results":"33","hashOfConfig":"32"},{"size":2884,"mtime":1700520778244,"results":"34","hashOfConfig":"32"},{"size":3897,"mtime":1700520772795,"results":"35","hashOfConfig":"32"},{"size":863,"mtime":1700523569243,"results":"36","hashOfConfig":"32"},{"size":238,"mtime":1700520772793,"results":"37","hashOfConfig":"32"},{"size":438,"mtime":1700520772796,"results":"38","hashOfConfig":"32"},{"size":2387,"mtime":1700520778251,"results":"39","hashOfConfig":"32"},{"size":570,"mtime":1700523614802,"results":"40","hashOfConfig":"32"},{"size":2830,"mtime":1700529819354,"results":"41","hashOfConfig":"32"},{"size":2005,"mtime":1700521894488,"results":"42","hashOfConfig":"32"},{"size":1610,"mtime":1700520778252,"results":"43","hashOfConfig":"32"},{"size":4402,"mtime":1700524944443,"results":"44","hashOfConfig":"32"},{"size":2073,"mtime":1700520772812,"results":"45","hashOfConfig":"32"},{"size":2823,"mtime":1700529831098,"results":"46","hashOfConfig":"32"},{"size":1029,"mtime":1700520778250,"results":"47","hashOfConfig":"32"},{"size":2818,"mtime":1700529837875,"results":"48","hashOfConfig":"32"},{"size":3274,"mtime":1700520772803,"results":"49","hashOfConfig":"32"},{"size":1279,"mtime":1700520778253,"results":"50","hashOfConfig":"32"},{"size":1400,"mtime":1700520778255,"results":"51","hashOfConfig":"32"},{"size":2830,"mtime":1700520772794,"results":"52","hashOfConfig":"32"},{"size":366,"mtime":1700520772795,"results":"53","hashOfConfig":"32"},{"size":180,"mtime":1700520772798,"results":"54","hashOfConfig":"32"},{"size":986,"mtime":1700521347675,"results":"55","hashOfConfig":"32"},{"size":873,"mtime":1700523919468,"results":"56","hashOfConfig":"32"},{"size":3964,"mtime":1700523448142,"results":"57","hashOfConfig":"32"},{"size":1251,"mtime":1700520778246,"results":"58","hashOfConfig":"32"},{"size":885,"mtime":1700520778247,"results":"59","hashOfConfig":"32"},{"size":1391,"mtime":1700520772796,"results":"60","hashOfConfig":"32"},{"size":6712,"mtime":1700520778249,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oqkcxn",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\index.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\App.js",["164","165","166","167","168"],[],"import React from 'react';\r\nimport './App.css';\r\nimport PatientInfo from './pages/employee/PatientInfo';\r\nimport TestData from './TestData.json';\r\nimport Layout from './components/Layout';\r\nimport {Routes as Switch, Route} from 'react-router-dom';\r\nimport Register from './pages/public/Register';\r\nimport Login from './pages/public/Login';\r\nimport Home from './pages/public/Home';\r\nimport { AuthContextProvider } from './context/AuthContext';\r\nimport { ToastContextProvider } from './context/ToastContext';\r\nimport AllPatients from './pages/employee/AllPatients';\r\nimport PatientMessages from './pages/employee/PatientMessages';\r\nimport MessageDetails from './pages/employee/MessageDetails';\r\nimport RequireAuth from './utils/RequireAuth';\r\nimport MyInfo from './pages/patient/MyInfo';\r\nimport MyMessageDetails from './pages/patient/MyMessageDetails';\r\nimport MyMessages from './pages/patient/MyMessages';\r\nimport CreateMessage from './pages/patient/CreateMessage';\r\nimport PatientNotes from \"./pages/employee/PatientNotes\";\r\nimport MyNotes from \"./pages/patient/MyNotes\";\r\nimport ActiveMessages from './pages/employee/ActiveMessages';\r\nimport CreateEmployee from './pages/employee/CreateEmployee';\r\n\r\nfunction App() {\r\n  return (\r\n    <ToastContextProvider>\r\n      <AuthContextProvider>\r\n        <Layout>\r\n          <Switch>\r\n            //public\r\n            <Route path=\"/\" element={<Home/>} />\r\n            <Route path=\"/login\" element={<Login/>} />\r\n            <Route path=\"/register\" element={<Register/>} />\r\n\r\n            //Employee\r\n            <Route element={<RequireAuth allowedRoles={\"EMPLOYEE\"}/>}>\r\n              <Route path=\"/patients/all\" element={<AllPatients />} />\r\n              <Route path=\"/messages/active\" element={<ActiveMessages />} />\r\n              <Route path=\"/patient/:id\" element={<PatientInfo />} />\r\n              <Route path=\"/patient/:patientId/messages\" element={<PatientMessages />} />\r\n              <Route path=\"/messages/:messageId\" element={<MessageDetails />} />\r\n              <Route path=\"/patient/:patientId/notes\" element={<PatientNotes />} />\r\n              <Route path=\"/employee\" element={<CreateEmployee />} />\r\n              // patient Notes, en knapp \"create note\"\r\n              // note details\r\n            </Route>\r\n\r\n            //Patient\r\n            <Route element={<RequireAuth allowedRoles={\"PATIENT\"}/>}>\r\n              <Route path=\"/myinfo/\" element={<MyInfo />} />\r\n              <Route path=\"/mymessages\" element={<MyMessages />} />\r\n              <Route path=\"/mymessages/:messageId\" element={<MyMessageDetails />} />\r\n              <Route path=\"/mymessages/create\" element={<CreateMessage />} />\r\n              <Route path=\"/mynotes/\" element={<MyNotes />} />\r\n            </Route>\r\n          </Switch> \r\n        </Layout>\r\n      </AuthContextProvider>\r\n    </ToastContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\AuthContext.js",["169","170"],[],"import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ToastContext from \"./ToastContext\";\r\nimport useApi from \"../hooks/useApi\";  // Import the useApi hook\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const { toast } = useContext(ToastContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [user, setUser] = useState(null);\r\n  const { get, post, loading, error } = useApi();  // Initialize useApi hook\r\n\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  const getErrorMessage = (status) => {\r\n    switch (status) {\r\n      case 401:\r\n        return \"Incorrect user ID or password\";\r\n      case 403:\r\n        return \"Access Denied\";\r\n      case 404:\r\n        return \"Not found\";\r\n      case 406:\r\n        return \"Invalid input data\";\r\n      case 409:\r\n        return \"Already exists\";\r\n      default:\r\n        return \"An error occurred\";\r\n    }\r\n  };\r\n\r\n  const checkUserLoggedIn = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(\"storedUser: \" + JSON.stringify(storedUser));\r\n      if (storedUser) {\r\n        const result = await get(\"/auth/info\", storedUser.token);\r\n\r\n        if (result) {\r\n          if (\r\n            location.pathname === \"/login\" ||\r\n            location.pathname === \"/register\"\r\n          ) {\r\n            setTimeout(() => {\r\n              navigate(\"/\", { replace: true });\r\n            }, 500);\r\n          } else {\r\n            navigate(location.pathname ? location.pathname : \"/\");\r\n          }\r\n          setUser(result);\r\n        } else {\r\n          navigate(\"/login\", { replace: true });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const result = await post(\"/auth/authenticate\", userData);\r\n\r\n      if (result) {\r\n        result.token = window.btoa(userData.email + \":\" + userData.password);\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(`Logged in ${result.firstName}`);\r\n\r\n        navigate(location.state?.from?.pathname || \"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(error.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const registerPatient = async (userData) => {\r\n    try {\r\n      const result = await post(\"/auth/register\", userData);\r\n\r\n      if (result) {\r\n        result.token = window.btoa(userData.email + \":\" + userData.password);\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setUser(result);\r\n        toast.success(\"User registered successfully!\");\r\n\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        const errorMessage = getErrorMessage(error.status);\r\n        toast.error(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (storedUser) {\r\n        await post(\"/auth/logout\", null, storedUser.token);\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n        navigate(\"/login\");\r\n        toast.success(\"Logged out successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n      toast.error(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ loginUser, registerPatient, logout, user, setUser }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\utils\\RequireAuth.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Layout.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\context\\ToastContext.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientMessages.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Home.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyMessageDetails.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyMessages.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\CreateMessage.js",["171","172","173"],[],"import React, { useState } from \"react\";\r\nimport useApi from \"../../hooks/useApi\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst CreateMessage = () => {\r\n  const { post, loading, error } = useApi();\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!content) {\r\n      toast.error('Please fill in requierd field');\r\n      return;\r\n    }\r\n    try{\r\n      console.log(user.token);\r\n      const result = await post(\"/messages\", {content: content}, user.token);\r\n      console.log(result);\r\n\r\n      if (result) {\r\n        toast.success('Message sent successfully');\r\n        navigate('/mymessages');\r\n      } else {\r\n        toast.error('Error sending message');\r\n      }\r\n    } catch (err) {\r\n        toast.error('Error sending message')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>New Message</h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"content\" className=\"form-label\">\r\n          Message Content:\r\n        </label>\r\n        <textarea\r\n          id=\"content\"\r\n          className=\"form-control\"\r\n          rows=\"5\"\r\n          value={content}\r\n          onChange={handleContentChange}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleSendMessage}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateMessage;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Register.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\public\\Login.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\MessageDetails.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientInfo.js",["174"],[],"import React, { useState } from \"react\";\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\n\r\nconst PatientInfo = () => {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const patient = location.state;\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <table className=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <td>Name:</td>\r\n            <td>{patient.firstName} {patient.lastName}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Username:</td>\r\n            <td>{patient.email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Birth Date:</td>\r\n            <td>{patient.birthDate}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"mt-4\">\r\n        <Link to={`/patient/${id}/notes`} className=\"btn btn-info me-2\">\r\n          Notes\r\n        </Link>\r\n        <Link to={`/patient/${id}/messages`} className=\"btn btn-info me-2\">\r\n          Messages\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientInfo;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\PatientNotes.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\AllPatients.js",["175","176"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\n//import { Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ToastContext from \"../../context/ToastContext\";\r\nimport usePatients from \"../../hooks/usePatients\";\r\n\r\nconst AllPatients = () => {\r\n  const { patients, loading } = usePatients([]);\r\n  const [allPatients, setAllPatients] = useState(patients);\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setAllPatients(patients);\r\n  }, [patients]);\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newSearchUser = patients.filter((patient) =>\r\n      patient.firstName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n      patient.lastName.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n    setAllPatients(newSearchUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>All Patients</h1>\r\n        <a href=\"/patients/all\" className=\"btn btn-danger my-2\">\r\n          Reload Patient List\r\n        </a>\r\n        <hr className=\"my-4\" />\r\n        {loading ? (\r\n          <Spinner splash=\"Loading Patients...\" />\r\n        ) : (\r\n          <>\r\n            {allPatients.length === 0 ? ( // Use 'allPatients' for display\r\n              <h3>No patients found</h3>\r\n            ) : (\r\n              <>\r\n                <form className=\"d-flex mb-3\" onSubmit={handleSearchSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"searchInput\"\r\n                    id=\"searchInput\"\r\n                    className=\"form-control my-2\"\r\n                    placeholder=\"Search Patient By Name\"\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-info mx-2\">\r\n                    Search\r\n                  </button>\r\n                </form>\r\n\r\n                <p>\r\n                  Total Patients: <strong>{allPatients.length}</strong>\r\n                </p>\r\n\r\n                <table className=\"table table-hover\">\r\n                  <thead>\r\n                    <tr className=\"table-dark\">\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Profile</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allPatients.map((patient) => ( // Display 'allPatients' instead of 'patients'\r\n                      <tr key={patient._id}>\r\n                        <th scope=\"row\">{patient.firstName + \" \" + patient.lastName}</th>\r\n                        <td>{patient.email}</td>\r\n                        <td>\r\n                          <Link\r\n                              to={`/patient/${patient.id}`} state={ patient } className=\"btn btn-info my-2\">\r\n                            Profile\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllPatients;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyInfo.js",["177"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyInfo = () => {\r\n  const { user } = useAuth();\r\n  const [patient, setPatient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setPatient(user);\r\n  }, []); \r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1>My Information</h1>\r\n      {patient ? (\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Name:</td>\r\n              <td>{patient.firstName} {patient.lastName}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Username:</td>\r\n              <td>{patient.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Birth Date:</td>\r\n              <td>{patient.birthDate}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <Spinner splash=\"Loading Patient Information...\" />\r\n      )}\r\n      <div className=\"mt-4\">\r\n        <Link to={`/mynotes`} className=\"btn btn-info me-2\">\r\n          Notes\r\n        </Link>\r\n        <Link to={`/mymessages`} className=\"btn btn-info me-2\">\r\n          Messages\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyInfo;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\patient\\MyNotes.js",["178"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Spinner from '../../components/Spinner';\r\nimport useNotes from \"../../hooks/useNotes\";\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst NoteDetails = () => {\r\n    const {user} = useAuth();\r\n\r\n    const { notes : myNotes, loading } = useNotes(user.id);\r\n    const [notes, setMyNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMyNotes(myNotes)\r\n    }, [user, myNotes]);\r\n\r\n    const renderNotes = (note) => (\r\n        <div key={note.id} className='ml-3 bg-light p-3 rounded mb-3'>\r\n            <p>\r\n                Written by: {note.employee.firstName} {note.employee.lastName} ({note.employee.email})\r\n            </p>\r\n            <p>{note.text}</p>\r\n            {note.encounter && (\r\n                <p>\r\n                    Encounter: {note.encounter.toLocaleString()}\r\n                </p>\r\n            )}\r\n            <p>Created at: {new Date(note.dateTimeCreated).toLocaleString()}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes for patient</h1>\r\n            {loading ? (\r\n                <Spinner splash=\"Loading Note Details...\" />\r\n            ) : (\r\n                <div>\r\n                    {notes.map((note) => renderNotes(note))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteDetails;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Navbar.js",["179","180","181","182","183","184","185"],[],"import {Link} from 'react-router-dom';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Navbar = ({ title = \"Patient Journal System\" }) => {\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-primary\" data-bs-theme=\"dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {title}\r\n          </a>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarColor01\"\r\n          aria-controls=\"navbarColor01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            {user ? (\r\n              <>\r\n                {user.role === \"PATIENT\" && (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/myinfo\">\r\n                      <a className=\"nav-link\">My Info</a>\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {user.role === \"EMPLOYEE\" && (\r\n                  <>\r\n                  <li className=\"nav-item\">\r\n                      <Link to=\"/employee\">\r\n                        <a className=\"nav-link\">Employee</a>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/messages/active\">\r\n                        <a className=\"nav-link\">Messages</a>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/patients/all\">\r\n                        <a className=\"nav-link\">All patients</a>\r\n                      </Link>\r\n                    </li>\r\n                  </>\r\n                )}\r\n                <li className=\"nav-item\" onClick={handleLogout}>\r\n                  <button className=\"btn btn-danger\">Log out</button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\">\r\n                    <a className=\"nav-link\">Login</a>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/register\">\r\n                    <a className=\"nav-link\">Register</a>\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useAuth.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessageWithReplies.js",["186","187"],[],"import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport useAuth from './useAuth';\r\nimport useApi from './useApi';\r\n\r\nconst useMessageWithReplies = (messageId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [message, setMessage] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token) {\r\n          const fetchedMessage = await get(`/messages/${messageId}`, user.token);\r\n          console.log(\"id \"+ fetchedMessage.id);\r\n          if (fetchedMessage) {\r\n            setMessage(fetchedMessage);\r\n          } else {\r\n            toast.error('Error fetching message with replies');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching message with replies');\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, [user, messageId]);\r\n  return { message, loading };\r\n};\r\n\r\nexport default useMessageWithReplies;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\usePatients.js",["188"],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\ActiveMessages.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useMessages.js",["189","190","191"],[],"import { useState, useEffect } from 'react';\r\nimport useAuth from './useAuth';\r\nimport useApi from './useApi';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useMessages = (type, patientId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const {user} = useAuth()\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      let url;\r\n\r\n      if (type === 'active') {\r\n        url = '/messages/active';\r\n      } else if (type === 'archived') {\r\n        url = ''; {/* not implemented yet */}\r\n      } else if (type === 'patient' && patientId) {\r\n        url = `/patients/${patientId}/messages/list`;\r\n      } else {\r\n        toast.error('An error occured')\r\n        return;\r\n      }\r\n      try {\r\n        if (user && user.token ) {\r\n          const fetchedMessages = await get(url, user.token);\r\n\r\n          if (fetchedMessages) {\r\n            setMessages(fetchedMessages);\r\n          } else {\r\n            toast.error('Error fetching messages');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching messages');\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [type, patientId]);\r\n\r\n  return { messages, loading };\r\n};\r\n\r\nexport default useMessages;","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useNotes.js",["192","193"],[],"import { useEffect, useState } from 'react';\r\nimport useApi from './useApi';\r\nimport useAuth from './useAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useNotes = (patientId) => {\r\n  const { get, loading, error } = useApi();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const {user} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (user && user.token ) {\r\n          const fetchedNotes = await get(`/patients/${patientId}/notes/list`, user.token);\r\n\r\n          if (fetchedNotes) {\r\n            setNotes(fetchedNotes);\r\n          } else {\r\n            toast.error('Error fetching patient notes');\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        toast.error('Error fetching patient notes');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [patientId]);\r\n\r\n  return { notes, loading };\r\n};\r\n\r\nexport default useNotes;\r\n","C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\hooks\\useApi.js",[],[],"C:\\Users\\Yaman\\GitHub\\JournalSystem\\frontend\\src\\pages\\employee\\CreateEmployee.js",["194","195","196","197"],[],"import React, { useContext } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useApi from '../../hooks/useApi';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst CreateEmployee = () => {\r\n    const { post, loading, error } = useApi();\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [credentials, setCredentials] = React.useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        birthDate: '',\r\n        position: 'OTHER',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setCredentials({\r\n            ...credentials,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            !credentials.email ||\r\n            !credentials.password ||\r\n            !credentials.confirmPassword ||\r\n            !credentials.firstName ||\r\n            !credentials.lastName ||\r\n            !credentials.birthDate \r\n            ) {\r\n            toast.error('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        if (credentials.confirmPassword !== credentials.password) {\r\n            toast.error('The passwords do not match');\r\n            return;\r\n        }\r\n\r\n        try{\r\n            const userData = { ...credentials, confirmPassword: undefined };\r\n            const result = await post(\"/employees/create\", userData, user.token);\r\n            console.log(result);\r\n\r\n            if (result) {\r\n                toast.success('New employee created');\r\n                navigate('/');\r\n            } else {\r\n                toast.error('Error creating employee');\r\n            }\r\n        } catch (err) {\r\n            toast.error('Error creating employee')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={2000} />\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>Create a new employee account</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label mt-4\">\r\n                        First Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        value={credentials.firstName}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter first name\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\" className=\"form-label mt-4\">\r\n                        Last Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        value={credentials.lastName}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter last name\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"birthDate\" className=\"form-label mt-4\">\r\n                        Birth Date\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"birthDate\"\r\n                        name=\"birthDate\"\r\n                        value={credentials.birthDate}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"emailInput\" className=\"form-label mt-4\">\r\n                        Email address\r\n                    </label>\r\n                    <input\r\n                        type=\"username\" //edit later to email\r\n                        className=\"form-control\"\r\n                        id=\"emailInput\"\r\n                        name=\"email\"\r\n                        value={credentials.email}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter email\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"passwordInput\" className=\"form-label mt-4\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"passwordInput\"\r\n                        name=\"password\"\r\n                        value={credentials.password}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter password\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\" className=\"form-label mt-4\">\r\n                        Confirm password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        value={credentials.confirmPassword}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Confirm password\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'> \r\n                    <label htmlFor='position' className='form-label mt-4'>\r\n                        Position\r\n                    </label>\r\n                    <select\r\n                        id=\"position\"\r\n                        name=\"position\"\r\n                        className=\"form-select\"\r\n                        value={credentials.position}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value=\"OTHER\">Other</option>\r\n                        <option value=\"DOCTOR\">Doctor</option>\r\n                    </select>\r\n                </div>\r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary my-3\" />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateEmployee;",{"ruleId":"198","severity":1,"message":"199","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":30,"column":19,"nodeType":"204","messageId":"205","endLine":32,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":34,"column":61,"nodeType":"204","messageId":"205","endLine":37,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":44,"column":70,"nodeType":"204","messageId":"205","endLine":47,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":47,"column":21,"nodeType":"204","messageId":"205","endLine":50,"endColumn":13},{"ruleId":"198","severity":1,"message":"206","line":15,"column":22,"nodeType":"200","messageId":"201","endLine":15,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":19,"column":6,"nodeType":"209","endLine":19,"endColumn":8,"suggestions":"210"},{"ruleId":"198","severity":1,"message":"211","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":24},{"ruleId":"198","severity":1,"message":"206","line":8,"column":17,"nodeType":"200","messageId":"201","endLine":8,"endColumn":24},{"ruleId":"198","severity":1,"message":"212","line":8,"column":26,"nodeType":"200","messageId":"201","endLine":8,"endColumn":31},{"ruleId":"198","severity":1,"message":"213","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"214","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":27},{"ruleId":"198","severity":1,"message":"215","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":20},{"ruleId":"207","severity":1,"message":"216","line":12,"column":6,"nodeType":"209","endLine":12,"endColumn":8,"suggestions":"217"},{"ruleId":"198","severity":1,"message":"218","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":16,"column":11,"nodeType":"221","endLine":16,"endColumn":48},{"ruleId":"219","severity":1,"message":"222","line":38,"column":23,"nodeType":"221","endLine":38,"endColumn":47},{"ruleId":"219","severity":1,"message":"222","line":46,"column":25,"nodeType":"221","endLine":46,"endColumn":49},{"ruleId":"219","severity":1,"message":"222","line":51,"column":25,"nodeType":"221","endLine":51,"endColumn":49},{"ruleId":"219","severity":1,"message":"222","line":56,"column":25,"nodeType":"221","endLine":56,"endColumn":49},{"ruleId":"219","severity":1,"message":"222","line":69,"column":21,"nodeType":"221","endLine":69,"endColumn":45},{"ruleId":"219","severity":1,"message":"222","line":74,"column":21,"nodeType":"221","endLine":74,"endColumn":45},{"ruleId":"198","severity":1,"message":"212","line":7,"column":25,"nodeType":"200","messageId":"201","endLine":7,"endColumn":30},{"ruleId":"207","severity":1,"message":"223","line":31,"column":6,"nodeType":"209","endLine":31,"endColumn":23,"suggestions":"224"},{"ruleId":"207","severity":1,"message":"223","line":30,"column":6,"nodeType":"209","endLine":30,"endColumn":12,"suggestions":"225"},{"ruleId":"198","severity":1,"message":"212","line":7,"column":25,"nodeType":"200","messageId":"201","endLine":7,"endColumn":30},{"ruleId":"226","severity":1,"message":"227","line":19,"column":19,"nodeType":"228","messageId":"229","endLine":19,"endColumn":46},{"ruleId":"207","severity":1,"message":"230","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":23,"suggestions":"231"},{"ruleId":"198","severity":1,"message":"212","line":7,"column":25,"nodeType":"200","messageId":"201","endLine":7,"endColumn":30},{"ruleId":"207","severity":1,"message":"230","line":30,"column":6,"nodeType":"209","endLine":30,"endColumn":17,"suggestions":"232"},{"ruleId":"198","severity":1,"message":"214","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":27},{"ruleId":"198","severity":1,"message":"233","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"206","line":10,"column":19,"nodeType":"200","messageId":"201","endLine":10,"endColumn":26},{"ruleId":"198","severity":1,"message":"212","line":10,"column":28,"nodeType":"200","messageId":"201","endLine":10,"endColumn":33},"no-unused-vars","'TestData' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'ToastContainer' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'ToastContext' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["235"],"'useParams' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.",["236"],["237"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'get' and 'user'. Either include them or remove the dependency array.",["238"],["239"],"'Link' is defined but never used.",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [checkUserLoggedIn]",{"range":"252","text":"253"},"Update the dependencies array to be: [user]",{"range":"254","text":"255"},"Update the dependencies array to be: [user, messageId, get]",{"range":"256","text":"257"},"Update the dependencies array to be: [get, user]",{"range":"258","text":"259"},"Update the dependencies array to be: [type, patientId, user, get]",{"range":"260","text":"261"},"Update the dependencies array to be: [get, patientId, user]",{"range":"262","text":"263"},[686,688],"[checkUserLoggedIn]",[345,347],"[user]",[888,905],"[user, messageId, get]",[786,792],"[get, user]",[1162,1179],"[type, patientId, user, get]",[806,817],"[get, patientId, user]"]